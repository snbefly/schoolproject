<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en" prefix="dc: http://purl.org/dc/elements/1.1/">
<head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Befly."/><meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Windows, University of Victoria"/>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>

<meta name="dc:creator" content="Befly" />
<meta name="dc:title" content="&#x0421;&#x0422;&#x0412;&#x041E;&#x0420;&#x0415;&#x041D;&#x041D;&#x042F; &#x0406;&#x041D;&#x0422;&#x0415;&#x0420;&#x0424;&#x0415;&#x0419;&#x0421;&#x0423; &#x041F;&#x0420;&#x041E;&#x0413;&#x0420;&#x0410;&#x041C;&#x0418; &#x0423; &#x042F;&#x0417;&#x0418;&#x041A;&#x0423; &#x0421;# &#x0417;&#x0410; &#x0414;&#x041E;&#x041F;&#x041E;&#x041C;&#x041E;&#x0413;&#x041E;&#x0423; WIN FORMS" />



<title>
&#x0421;&#x0422;&#x0412;&#x041E;&#x0420;&#x0415;&#x041D;&#x041D;&#x042F; &#x0406;&#x041D;&#x0422;&#x0415;&#x0420;&#x0424;&#x0415;&#x0419;&#x0421;&#x0423; &#x041F;&#x0420;&#x041E;&#x0413;&#x0420;&#x0410;&#x041C;&#x0418; &#x0423; &#x042F;&#x0417;&#x0418;&#x041A;&#x0423; &#x0421;# &#x0417;&#x0410; &#x0414;&#x041E;&#x041F;&#x041E;&#x041C;&#x041E;&#x0413;&#x041E;&#x0423; WIN FORMS
</title>

<!-- Made with executable version 7.0 Release 3 Build 0 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->



<style>


/* This is the CSS stylesheet used in the exercise. */
/* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */

/* BeginCorePageCSS */

/* Made with executable version 7.0 Release 3 Build 0 */



/* CSS variables for colours. */
:root{
	--strFontFace:       Geneva,Arial,sans-serif;
	--strFontSize:       ;
	--strTextColor:      #000000;
	--strTitleColor:     #000000;

	--strFuncLightColor: #ffffff;
	--strFuncShadeColor: #7f7f7f;
	--strLinkColor:      #0000FF;
	--strVLinkColor:     #0000CC;
	
	--strNavBarColor:    #000000;
	--strNavLightColor:  #7f7f7f;
	--strNavShadeColor:  #000000;
	--strNavTextColor:   #ffffff;
	
	--strPageBGColor:    #C0C0C0;
	--strExBGColor:      #FFFFFF;
}

body{
	font-family: var(--strFontFace);
	background-color: var(--strPageBGColor);
	color: var(--strTextColor);
	background-image: url(&#242;&#229;&#234;&#241;&#242;.png); 
	margin-right: 5%;
	margin-left: 5%;
	font-size: var(--strFontSize);
	padding-bottom: 0.5em;
}

p{
	text-align: left;
	margin: 0px;
	font-size: 1em;
}

table,div,span,td{
	font-size: 1em;
	color: var(--strTextColor);
}

div.Titles{
	padding: 0.5em;;
	text-align: center;
	color: var(--strTitleColor);
}

button{
	font-family: var(--strFontFace);
	font-size: 1em;
	display: inline;
}

.ExerciseTitle{
	font-size: 140%;
	color: var(--strTitleColor);
}

.ExerciseSubtitle{
	font-size: 120%;
	color: var(--strTitleColor);
}

div.StdDiv, div.ExerciseContainer, div.ReadingContainer{
	background-color: var(--strExBGColor);
	text-align: center;
	font-size: 1em;
	color: var(--strTextColor);
	padding: 0.5em;
	border-style: solid;
	border-width: 1px 1px 1px 1px;
	border-color: var(--strTextColor);
	margin-bottom: 1px;
}

div.ReadingContainer, div.ExerciseContainer{
	min-width: 15em;
	flex-grow: 1;
	flex-basis: 0;
	margin: 1px;
}

div#ContainerDiv{
	margin: -1px;
	padding: 0;
	border: none;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: space-between;
}

/* EndCorePageCSS */

.RTLText{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", var(--strFontFace); 
}

.CentredRTLText{
	text-align: center;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", var(--strFontFace); 
}

button p.RTLText{
	text-align: center;
}

.RTLGapBox{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Times New Roman", var(--strFontFace);
}

.Guess{
	font-weight: bold;
}

.CorrectAnswer{
	font-weight: bold;
}

div#Timer{
	padding: 0.25em;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	color: var(--strTitleColor);
}

span#TimerText{
	padding: 0.25em;
	border-width: 1px;
	border-style: solid;
	font-weight: bold;
	display: none;
	color: var(--strTitleColor);
}

span.Instructions{

}

div.ExerciseText{

}

.FeedbackText, .FeedbackText span.CorrectAnswer, .FeedbackText span.Guess, .FeedbackText span.Answer{
	color: var(--strTitleColor);
}

.LeftItem{
	font-size: 1em;
	color: var(--strTextColor);
	text-align: left;
}

.RightItem{
	font-weight: bold;
	font-size: 1em;
	color: var(--strTextColor);
	text-align: left;
}

span.CorrectMark{

}

input, textarea{
	font-family: var(--strFontFace);
	font-size: 120%;
}

select{
	font-size: 1em;
}

div.Feedback {
	background-color: var(--strPageBGColor);
	left: 33%;
	width: 34%;
	top: 33%;
	z-index: 1;
	border-style: solid;
	border-width: 1px;
	padding: 5px;
	text-align: center;
	color: var(--strTitleColor);
	position: absolute;
	display: none;
	font-size: 1em;
}




div.ExerciseDiv{
	color: var(--strTextColor);
}

/* JMatch standard output table. */
table.MatchTable{
	margin: 2em auto; 
	border-width: 0;
}

/* JMatch flashcard styles */
table.FlashcardTable{
	background-color: transparent;
	color: var(--strTextColor);
	border-color: var(--strTextColor);
	margin-left: auto;
	margin-right: auto;
	margin-top: 2em;
	margin-bottom: 2em;
	/*width: 90%;*/
	position: relative;
	text-align: center;
	padding: 0px;
}

table.FlashcardTable tr{
	border-style: none;
	margin: 0px;
	padding: 0px;
	background-color: var(--strExBGColor);
}

table.FlashcardTable td.Showing{
	font-size: 140%;
	text-align: center;
	width: 50%;
	display: table-cell;
	padding: 2em;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-radius: 0.5em;
	color: var(--strTextColor);
	box-shadow: 0.2em 0.3em 0.2em var(--strNavShadeColor);
	background-color: var(--strPageBGColor);
}

table.FlashcardTable td.Hidden{
	display: none;
}

/* JMix styles */
div.JMixDrag, div.JMatchDrag{
	padding: 0;
	background-color: var(--strPageBGColor);
	border-style: none;
}

div#GuessDiv{
	padding: 0.5em;
	margin-bottom: 2em;
}

div#SegmentDiv{
	margin-top: 2em;
	margin-bottom: 2em;
	text-align: center;
}

a.ExSegment{
	font-size: 120%;
	font-weight: bold;
	text-decoration: none;
	color: var(--strTextColor);
	display: inline-block;
	padding: 0.5em;
	border: solid 1pt gray;
	margin-bottom: 0.5em;
}

span.RemainingWordList{
	font-style: italic;
}

div.DropLine {
	position: absolute;
	text-align: left;
	border-bottom-style: solid;
	border-bottom-width: 1px;
	border-bottom-color: var(--strTitleColor);
	width: 80%;
	left: 10%;
}

/* JCloze styles */

.ClozeWordList{
	text-align: center;
	font-weight: bold;
}

div.ClozeBody{
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	line-height: 2.0
}

span.GapSpan{
	font-weight: bold;
}

/* JCross styles */

table.CrosswordGrid{
	margin: auto auto 1em auto;
	border-collapse: collapse;
	padding: 0px;
	background-color: #000000;
}

table.CrosswordGrid tbody tr td{
	width: 1.5em;
	height: 1.5em;
	text-align: center;
	vertical-align: middle;
	font-size: 140%;
	padding: 1px;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-color: #000000;
	color: #000000;
}

table.CrosswordGrid span{
	color: #000000;
}

table.CrosswordGrid td.BlankCell{
	background-color: #000000;
	color: #000000;
}

table.CrosswordGrid td.LetterOnlyCell{
	text-align: center;
	vertical-align: middle;
	background-color: #ffffff;
	color: #000000;
	font-weight: bold;
}

table.CrosswordGrid td.NumLetterCell{
	text-align: left;
	vertical-align: top;
	background-color: #ffffff;
	color: #000000;
	padding: 1px;
	font-weight: bold;
}

.NumLetterCellText{
	cursor: pointer;
	color: #000000;
}

.GridNum{
	vertical-align: super;
	font-size: 66%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

.GridNum:hover, .GridNum:visited{
	color: #000000;
}

table#Clues{
	margin: auto;
	vertical-align: top;
}

table#Clues td{
	vertical-align: top;
}

table.ClueList{
  margin: auto;
}

td.ClueNum{
	text-align: right;
	font-weight: bold;
	vertical-align: top;
}

td.Clue{
	text-align: left;
}

div#ClueEntry{
	text-align: left;
	margin-bottom: 1em;
}

/* Keypad styles */

div.Keypad{
	text-align: center;
	display: none; /* initially hidden, shown if needed */
	margin-bottom: 0.5em;
}

div.Keypad button{
	font-family: var(--strFontFace);
	font-size: 120%;
	background-color: #ffffff;
	color: #000000;
	width: 2em;
	border-style: solid;
	border-width: 1px;
	border-radius: 0.5em;
	color: var(--strTextColor);
	box-shadow: 0.2em 0.3em 0.2em var(--strTextColor);
}

/* JQuiz styles */

div.QuestionNavigation{
	text-align: center;
}

.QNum{
	margin: 0em 1em 0.5em 1em;
	font-weight: bold;
	vertical-align: middle;
}

textarea{
	font-family: var(--strFontFace);
}

.QuestionText{
	text-align: left;
	margin: 0px;
	font-size: 1em;
}

.Answer{
	font-size: 120%;
}

.PartialAnswer{
	font-size: 120%;
	letter-spacing: 0.1em;
	color: var(--strTitleColor);
}

.Highlight{
	color: #000000;
	background-color: #ffff00;
	font-weight: bold;
	font-size: 120%;
}

ol.QuizQuestions{
	text-align: left;
	list-style-type: none;
}

li.QuizQuestion{
	padding: 1em;
	border-style: solid;
	border-width: 0px 0px 1px 0px;
}

ol.MCAnswers{
	text-align: left;
	list-style-type: upper-alpha;
	padding: 1em;
}

ol.MCAnswers li{
	margin-bottom: 1em;
}

ol.MSelAnswers{
	text-align: left;
	list-style-type: lower-alpha;
	padding: 1em;
}

div.ShortAnswer{
	padding: 1em;
}

.FuncButton {
	border-style: solid;
	border-radius: 0.5em;
	padding: 0.5em;
	min-width: 3em;

	border-left-color: var(--strFuncLightColor);
	border-top-color: var(--strFuncLightColor);
	border-right-color: var(--strFuncShadeColor);
	border-bottom-color: var(--strFuncShadeColor);
	color: var(--strTextColor);
	background-color: var(--strExBGColor);

	border-width: 1pt;
	cursor: pointer;	
	box-shadow: 0.2em 0.3em 0.2em var(--strFuncShadeColor);
}

.FuncButton:active {
	box-shadow: none;
}

.FuncButton:hover{
	color: var(--strExBGColor);
	background-color: var(--strTextColor);
}

/*BeginNavBarStyle*/

div.NavButtonBar{
	background-color: var(--strNavBarColor);
	text-align: center;
	margin: 0.25rem 0;
	clear: both;
	font-size: 1em;
	padding: 0.2em;
	box-sizing: border-box;
}

.NavButton {
	border-style: solid;
	border-radius: 0.5em;
	padding: 0.5em;
	min-width: 3em;
	
	border-left-color: var(--strNavLightColor);
	border-top-color: var(--strNavLightColor);
	border-right-color: var(--strNavShadeColor);
	border-bottom-color: var(--strNavShadeColor); 
	background-color: var(--strNavBarColor);
	color: var(--strNavTextColor);

	border-width: 1pt;
	cursor: pointer;	
	box-shadow: 0.2em 0.3em 0.2em var(--strNavShadeColor);
}

.NavButton:active {
	box-shadow: none;
}

.NavButton:hover{
	color: var(--strNavBarColor);
	background-color: var(--strNavTextColor);
}

/*EndNavBarStyle*/

a{
	color: var(--strLinkColor);
}

a:visited{
	color: var(--strVLinkColor);
}

a:hover{
	color: var(--strLinkColor);
}

div.CardStyle {
	position: absolute;
	font-family: var(--strFontFace);
	font-size: 1em;
	border-style: solid;
	border-radius: 0.5em;
	padding: 0.5em;
	min-width: 2em;
	border-width: 1pt;
	color: var(--strTextColor);
	box-shadow: 0.2em 0.3em 0.2em var(--strTextColor);
	background-color: var(--strExBGColor);
	left: -50px;
	top: -50px;
	overflow: visible;
	touch-action: none;
	user-select: none;
	box-sizing: border-box;
}

div.CardStyleCentered{
	text-align: center;
}

.rtl{
	text-align: right;
	font-size: 140%;
}


</style>

<script>

//<![CDATA[

<!--




//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}




//CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX

var topZ = 1000;

function ShowMessage(Feedback){
	var Output = Feedback + '<br /><br />';
	document.getElementById('FeedbackContent').innerHTML = Output;
	var FDiv = document.getElementById('FeedbackDiv');
	topZ++;
	FDiv.style.zIndex = topZ;
	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';

	FDiv.style.display = 'block';

	ShowElements(false, 'input');
	ShowElements(false, 'select');
	ShowElements(false, 'object');
	ShowElements(true, 'object', 'FeedbackContent');

//Focus the OK button
	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);
	
//
//	RefreshImages();
//
}

function ShowElements(Show, TagName, ContainerToReverse){
// added third argument to allow objects in the feedback box to appear
//IE bug -- hide all the form elements that will show through the popup
//FF on Mac bug : doesn't redisplay objects whose visibility is set to visible
//unless the object's display property is changed

	//get container object (by Id passed in, or use document otherwise)
	TopNode = document.getElementById(ContainerToReverse);
	var Els;
	if (TopNode != null) {
		Els = TopNode.getElementsByTagName(TagName);
	} else {
		Els = document.getElementsByTagName(TagName);
	}

	for (var i=0; i<Els.length; i++){
		if (TagName == "object") {
			//manipulate object elements in all browsers
			if (Show == true){
				Els[i].style.visibility = 'visible';
			}
			else{
				Els[i].style.visibility = 'hidden';
			}
		} 
	}
}



function HideFeedback(){
	document.getElementById('FeedbackDiv').style.display = 'none';
	ShowElements(true, 'input');
	ShowElements(true, 'select');
	ShowElements(true, 'object');
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].offsetWidth;
	this.H = document.getElementsByTagName('body')[0].offsetHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (typeof(window.pageYOffset) == 'number'){
		return window.pageYOffset;
	}
	else{
		if ((document.body)&&(document.body.scrollTop)){
			return document.body.scrollTop;
		}
		else{
			if ((document.documentElement)&&(document.documentElement.scrollTop)){
				return document.documentElement.scrollTop;
			}
			else{
				return 0;
			}
		}
	}
}

function GetViewportHeight(){
	if (typeof window.innerHeight != 'undefined'){
		return window.innerHeight;
	}
	else{
		if (((typeof document.documentElement != 'undefined')&&(typeof document.documentElement.clientHeight !=
     'undefined'))&&(document.documentElement.clientHeight != 0)){
			return document.documentElement.clientHeight;
		}
		else{
			return document.getElementsByTagName('body')[0].clientHeight;
		}
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T; 
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){ 
	if (InTextBox == true){return;}
	thisKey = e.keyCode;

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
		e.preventDefault();
	}
}

window.addEventListener('keypress',SuppressBackspace,false);

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

	RefreshImages();

}



Imgs = new Array();

function PreloadImages(){
	var a = PreloadImages.arguments;
	for (var i=0; i<a.length; i++){
		Imgs[i] = new Image();
		Imgs[i].src = a[i];
	}
}

function RefreshImages(){
	for (var i=0; i<document.images.length; i++){
		if (document.images[i].name.substring(0,6) != 'NavBar'){
			document.images[i].src = document.images[i].src;
		}
	}
}


function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//SELECTION OBJECT FOR TYPING WITH KEYPAD
var selObj = null;
            
SelObj = function(box){
	this.box = box;
	this.selStart = this.box.selectionStart;
	this.selEnd = this.box.selectionEnd;
	this.selText = this.box.value.substring(this.selStart, this.selEnd);
	return this;
}

function setSelText(newText){
	var caretPos = this.selStart + newText.length;
	var newValue = this.box.value.substring(0, this.selStart);
	newValue += newText;
	newValue += this.box.value.substring(this.selEnd, this.box.value.length);
	this.box.value = newValue;
	this.box.setSelectionRange(caretPos, caretPos);
	this.box.focus();
}
SelObj.prototype.setSelText = setSelText;

function setSelSelectionRange(start, end){
	this.box.setSelectionRange(start, end);
}
SelObj.prototype.setSelSelectionRange = setSelSelectionRange;

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}







//JQUIZ CORE JAVASCRIPT CODE

var CurrQNum = 0;
var CorrectIndicator = ':-)';
var IncorrectIndicator = 'X';
var YourScoreIs = '&#x041A;&#x043E;&#x043B;&#x0438;&#x0447;&#x0435;&#x0441;&#x0442;&#x0432;&#x043E; &#x043E;&#x0447;&#x043A;&#x043E;&#x0432;:';

//New for 6.2.2.0
var CompletedSoFar = 'Questions completed so far: ';
var ExerciseCompleted = 'You have completed the exercise.';
var ShowCompletedSoFar = true;

var ContinuousScoring = true;
var CorrectFirstTime = '';
var ShowCorrectFirstTime = true;
var ShuffleQs = true;
var ShuffleAs = false;
var DefaultRight = '&#x0412;&#x0435;&#x0440;&#x043D;&#x043E;!';
var DefaultWrong = '&#x041D;&#x0435;&#x0432;&#x0435;&#x0440;&#x043D;&#x043E;! &#x041F;&#x043E;&#x043F;&#x044B;&#x0442;&#x0430;&#x0439;&#x0441;&#x044F; &#x0441;&#x043D;&#x043E;&#x0432;&#x0430;!';
var QsToShow = 19;
var Score = 0;
var Finished = false;
var Qs = null;
var QArray = new Array();
var ShowingAllQuestions = false;
var ShowAllQuestionsCaption = '&#x041F;&#x043E;&#x043A;&#x0430;&#x0436;&#x0438; &#x0432;&#x0441;&#x0435; &#x043E;&#x0442;&#x0432;&#x0435;&#x0442;&#x044B;';
var ShowOneByOneCaption = '&#x041F;&#x043E;&#x043A;&#x0430;&#x0436;&#x0438; &#x043E;&#x0442;&#x0432;&#x0435;&#x0442;&#x044B; &#x043F;&#x043E; &#x043E;&#x0434;&#x043D;&#x043E;&#x043C;&#x0443;';
var State = new Array();
var Feedback = '';
var TimeOver = false;
var strInstructions = '';
var Locked = false;

//The following variable can be used to add a message explaining that
//the question is finished, so no further marking will take place.
var strQuestionFinished = '';

function CompleteEmptyFeedback(){
	var QNum, ANum;
	for (QNum=0; QNum<I.length; QNum++){
//Only do this if not multi-select
		if (I[QNum][2] != '3'){
  		for (ANum = 0; ANum<I[QNum][3].length; ANum++){
  			if (I[QNum][3][ANum][1].length < 1){
  				if (I[QNum][3][ANum][2] > 0){
  					I[QNum][3][ANum][1] = DefaultRight;
  				}
  				else{
  					I[QNum][3][ANum][1] = DefaultWrong;
  				}
  			}
  		}
		}
	}
}

function SetUpQuestions(){
	var AList = new Array(); 
	var QList = new Array();
	var i, j;
	Qs = document.getElementById('Questions');
	while (Qs.getElementsByTagName('li').length > 0){
		QList.push(Qs.removeChild(Qs.getElementsByTagName('li')[0]));
	}
	var DumpItem = 0;
	if (QsToShow > QList.length){
		QsToShow = QList.length;
	}
	while (QsToShow < QList.length){
		DumpItem = Math.floor(QList.length*Math.random());
		for (j=DumpItem; j<(QList.length-1); j++){
			QList[j] = QList[j+1];
		}
		QList.length = QList.length-1;
	}
	if (ShuffleQs == true){
		QList = Shuffle(QList);
	}
	if (ShuffleAs == true){
		var As;
		for (var i=0; i<QList.length; i++){
			As = QList[i].getElementsByTagName('ol')[0];
			if (As != null){
  			AList.length = 0;
				while (As.getElementsByTagName('li').length > 0){
					AList.push(As.removeChild(As.getElementsByTagName('li')[0]));
				}
				AList = Shuffle(AList);
				for (j=0; j<AList.length; j++){
					As.appendChild(AList[j]);
				}
			}
		}
	}
	
	for (i=0; i<QList.length; i++){
		Qs.appendChild(QList[i]);
		QArray[QArray.length] = QList[i];
	}

//Show the first item
	QArray[0].style.display = '';
	
//Now hide all except the first item
	for (i=1; i<QArray.length; i++){
		QArray[i].style.display = 'none';
	}		
	SetQNumReadout();
	
	SetFocusToTextbox();
}

function SetFocusToTextbox(){
//if there's a textbox, set the focus in it
	if (QArray[CurrQNum].getElementsByTagName('input')[0] != null){
		QArray[CurrQNum].getElementsByTagName('input')[0].focus();
//and show a keypad if there is one
		if (document.getElementById('CharacterKeypad') != null){
			document.getElementById('CharacterKeypad').style.display = 'block';
		}
	}
	else{
  	if (QArray[CurrQNum].getElementsByTagName('textarea')[0] != null){
  		QArray[CurrQNum].getElementsByTagName('textarea')[0].focus();	
//and show a keypad if there is one
			if (document.getElementById('CharacterKeypad') != null){
				document.getElementById('CharacterKeypad').style.display = 'block';
			}
		}
//This added for 6.0.4.11: hide accented character buttons if no textbox
		else{
			if (document.getElementById('CharacterKeypad') != null){
				document.getElementById('CharacterKeypad').style.display = 'none';
			}
		}
	}
}

function ChangeQ(ChangeBy){
//The following line prevents moving to another question until the current
//question is answered correctly. Uncomment it to enable this behaviour. 
//	if (State[CurrQNum][0] == -1){return;}
	if (((CurrQNum + ChangeBy) < 0)||((CurrQNum + ChangeBy) >= QArray.length)){return;}
	QArray[CurrQNum].style.display = 'none';
	CurrQNum += ChangeBy;
	QArray[CurrQNum].style.display = '';
//Undocumented function added 10/12/2004
	ShowSpecialReadingForQuestion();
	SetQNumReadout();
	SetFocusToTextbox();
}

var HiddenReadingShown = false;
function ShowSpecialReadingForQuestion(){
//Undocumented function for showing specific reading text elements which change with each question
//Added on 10/12/2004
	if (document.getElementById('ReadingDiv') != null){
		if (HiddenReadingShown == true){
			document.getElementById('ReadingDiv').innerHTML = '';
		}
		if (QArray[CurrQNum] != null){
//Fix for 6.0.4.25
			var Children = QArray[CurrQNum].getElementsByTagName('div');
			for (var i=0; i<Children.length; i++){
			if (Children[i].className=="HiddenReading"){
					document.getElementById('ReadingDiv').innerHTML = Children[i].innerHTML;
					HiddenReadingShown = true;
//Hide the ShowAllQuestions button to avoid confusion
					if (document.getElementById('ShowMethodButton') != null){
						document.getElementById('ShowMethodButton').style.display = 'none';
					}
				}
			}	
		}
	}
}

function SetQNumReadout(){
	document.getElementById('QNumReadout').innerHTML = (CurrQNum+1) + ' / ' + QArray.length;
	if ((CurrQNum+1) >= QArray.length){
		if (document.getElementById('NextQButton') != null){
			document.getElementById('NextQButton').style.visibility = 'hidden';
		}
	}
	else{
		if (document.getElementById('NextQButton') != null){
			document.getElementById('NextQButton').style.visibility = 'visible';
		}
	}
	if (CurrQNum <= 0){
		if (document.getElementById('PrevQButton') != null){
			document.getElementById('PrevQButton').style.visibility = 'hidden';
		}
	}
	else{
		if (document.getElementById('PrevQButton') != null){
			document.getElementById('PrevQButton').style.visibility = 'visible';
		}
	}
}

var I=new Array();
I[0]=new Array();I[0][0]=100;
I[0][1]='';
I[0][2]='0';
I[0][3]=new Array();
I[0][3][0]=new Array('\u041F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0434\u043B\u044F \u043A\u043E\u043C\u0430\u043D\u0434\u043D\u043E\u0439 \u043A\u043E\u043D\u0441\u043E\u043B\u0438','',0,0,1);
I[0][3][1]=new Array('\u041F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u043D\u0430 \u0431\u0430\u0437\u0435 Wpf','',0,0,1);
I[0][3][2]=new Array('\u0414\u0438\u0437\u0430\u0439\u043D\u0430 \u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0432\u0435\u0431\u0441\u0430\u0439\u0442\u043E\u0432','',0,0,1);
I[0][3][3]=new Array('\u0414\u0438\u0437\u0430\u0439\u043D\u0430 \u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u044F','',1,100,1);
I[1]=new Array();I[1][0]=100;
I[1][1]='';
I[1][2]='0';
I[1][3]=new Array();
I[1][3][0]=new Array('\u0410\u043D\u0438\u043C\u0430\u0446\u0438\u044F','',0,0,1);
I[1][3][1]=new Array('\u0412\u044B\u043A\u0438\u0434\u043D\u043E\u0439 \u0441\u043F\u0438\u0441\u043E\u043A','',0,0,1);
I[1][3][2]=new Array('\u041A\u043D\u043E\u043F\u043A\u0430','',1,100,1);
I[1][3][3]=new Array('\u0413\u0430\u043B\u043E\u0447\u043A\u0430','',0,0,1);
I[2]=new Array();I[2][0]=100;
I[2][1]='';
I[2][2]='0';
I[2][3]=new Array();
I[2][3][0]=new Array('\u0413\u0440\u0443\u043F\u043F\u0438\u0440\u043E\u0432\u043A\u0430 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432','',1,100,1);
I[2][3][1]=new Array('\u0412\u044B\u043A\u0438\u0434\u043D\u043E\u0439 \u0441\u043F\u0438\u0441\u043E\u043A','',0,0,1);
I[2][3][2]=new Array('\u0410\u043D\u0438\u043C\u0430\u0446\u0438\u044F','',0,0,1);
I[2][3][3]=new Array('\u041A\u043D\u043E\u043F\u043A\u0430','',0,0,1);
I[3]=new Array();I[3][0]=100;
I[3][1]='';
I[3][2]='0';
I[3][3]=new Array();
I[3][3][0]=new Array('\u0413\u0440\u0443\u043F\u043F\u0438\u0440\u043E\u0432\u043A\u0430 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432','',0,0,1);
I[3][3][1]=new Array('\u0412\u0432\u043E\u0434 \u0422\u0435\u043A\u0441\u0442\u0430','',1,100,1);
I[3][3][2]=new Array('\u0410\u043D\u0438\u043C\u0430\u0446\u0438\u044F','',0,0,1);
I[3][3][3]=new Array('\u041A\u043D\u043E\u043F\u043A\u0430','',0,0,1);
I[4]=new Array();I[4][0]=100;
I[4][1]='';
I[4][2]='0';
I[4][3]=new Array();
I[4][3][0]=new Array('\u0413\u0440\u0443\u043F\u043F\u0438\u0440\u043E\u0432\u043A\u0430 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432','',0,0,1);
I[4][3][1]=new Array('\u0412\u044B\u043A\u0438\u0434\u043D\u043E\u0439 \u0441\u043F\u0438\u0441\u043E\u043A','',1,100,1);
I[4][3][2]=new Array('\u0410\u043D\u0438\u043C\u0430\u0446\u0438\u044F','',0,0,1);
I[4][3][3]=new Array('\u041A\u043D\u043E\u043F\u043A\u0430','',0,0,1);
I[5]=new Array();I[5][0]=100;
I[5][1]='';
I[5][2]='0';
I[5][3]=new Array();
I[5][3][0]=new Array('PictureBox','',0,0,1);
I[5][3][1]=new Array('ComboBox','',0,0,1);
I[5][3][2]=new Array('Button','',1,100,1);
I[5][3][3]=new Array('CheckBox','',0,0,1);
I[6]=new Array();I[6][0]=100;
I[6][1]='';
I[6][2]='0';
I[6][3]=new Array();
I[6][3][0]=new Array('PictureBox','',0,0,1);
I[6][3][1]=new Array('ComboBox','',0,0,1);
I[6][3][2]=new Array('Button','',0,0,1);
I[6][3][3]=new Array('CheckBox','',1,100,1);
I[7]=new Array();I[7][0]=100;
I[7][1]='';
I[7][2]='0';
I[7][3]=new Array();
I[7][3][0]=new Array('Button','',0,0,1);
I[7][3][1]=new Array('Label','',1,100,1);
I[7][3][2]=new Array('PictureBox','',0,0,1);
I[7][3][3]=new Array('CheckBox','',0,0,1);
I[8]=new Array();I[8][0]=100;
I[8][1]='';
I[8][2]='0';
I[8][3]=new Array();
I[8][3][0]=new Array('Button, ListBox, ComboBox;','',1,100,1);
I[8][3][1]=new Array('ListBox, VideoPlayer, CheckBox;','',0,0,1);
I[8][3][2]=new Array('CheckBox, ComboBox, Animation;','',0,0,1);
I[8][3][3]=new Array('Label, Calculator, Button.','',0,0,1);
I[9]=new Array();I[9][0]=100;
I[9][1]='';
I[9][2]='0';
I[9][3]=new Array();
I[9][3][0]=new Array('\u041A\u043D\u043E\u043F\u043A\u0430 \u0441\u0440\u0430\u0431\u043E\u0442\u0430\u0435\u0442;','',0,0,1);
I[9][3][1]=new Array('\u042D\u043B\u0435\u043C\u0435\u043D\u0442 \u0443\u0434\u0430\u043B\u0438\u0442\u0441\u044F;','',0,0,1);
I[9][3][2]=new Array('\u0421\u043E\u0437\u0434\u0430\u0441\u0442\u0441\u044F \u043D\u043E\u0432\u044B\u0439 \u0438\u0432\u0435\u043D\u0442;','',1,100,1);
I[9][3][3]=new Array('\u042D\u043B\u0435\u043C\u0435\u043D\u0442 \u043C\u043E\u0436\u043D\u043E \u0431\u0443\u0434\u0435\u0442 \u0442\u0440\u0430\u043D\u0441\u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u0442\u044C.','',0,0,1);
I[10]=new Array();I[10][0]=100;
I[10][1]='';
I[10][2]='0';
I[10][3]=new Array();
I[10][3][0]=new Array('\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043D\u0430 \u043A\u043E\u0442\u043E\u0440\u043E\u0435 \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0430 \u043C\u043E\u0436\u0435\u0442 \u043E\u0442\u0440\u0435\u0430\u0433\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043A\u043E\u0434\u043E\u043C;','',1,100,1);
I[10][3][1]=new Array('\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043A\u043E\u0442\u043E\u0440\u043E\u0435 \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E \u043F\u0440\u043E\u0438\u0441\u0445\u043E\u0434\u0438\u0442 \u043F\u0440\u0438 \u043D\u0430\u0436\u0430\u0442\u0438\u0438;','',0,0,1);
I[10][3][2]=new Array('\u042D\u043B\u0435\u043C\u0435\u043D\u0442 \u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 Windows Forms;','',0,0,1);
I[10][3][3]=new Array('\u042D\u043B\u0435\u043C\u0435\u043D\u0442 \u043C\u043E\u0436\u043D\u043E \u0431\u0443\u0434\u0435\u0442 \u0442\u0440\u0430\u043D\u0441\u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u0442\u044C.','',0,0,1);
I[11]=new Array();I[11][0]=100;
I[11][1]='';
I[11][2]='0';
I[11][3]=new Array();
I[11][3][0]=new Array('\u0420\u0430\u0437\u043C\u0435\u0440 \u0442\u0435\u043A\u0441\u0442\u0430;','',0,0,1);
I[11][3][1]=new Array('\u0428\u0440\u0438\u0444\u0442 \u0442\u0435\u043A\u0441\u0442\u0430;','',0,0,1);
I[11][3][2]=new Array('\u0412\u044B\u0440\u0430\u0432\u043D\u0438\u0432\u0430\u043D\u0438\u0435 \u0442\u0435\u043A\u0441\u0442\u0430;','',1,100,1);
I[11][3][3]=new Array('\u0421\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u0442\u0435\u043A\u0441\u0442\u0430.','',0,0,1);
I[12]=new Array();I[12][0]=100;
I[12][1]='';
I[12][2]='0';
I[12][3]=new Array();
I[12][3][0]=new Array('\u0422\u0435\u043A\u0441\u0442 \u0432 \u0437\u0430\u0433\u043B\u0430\u0432\u0438\u0438 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430;','',0,0,1);
I[12][3][1]=new Array('\u0418\u043C\u044F \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430 \u0432 \u043A\u043E\u0434\u0435;','',1,100,1);
I[12][3][2]=new Array('\u0421\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u0442\u0435\u043A\u0441\u0442\u0430 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430;','',0,0,1);
I[12][3][3]=new Array('\u0418\u043C\u044F \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0430 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430.','',0,0,1);
I[13]=new Array();I[13][0]=100;
I[13][1]='';
I[13][2]='0';
I[13][3]=new Array();
I[13][3][0]=new Array('\u0422\u0435\u043A\u0441\u0442 \u0432 \u0437\u0430\u0433\u043B\u0430\u0432\u0438\u0438 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430;','',0,0,1);
I[13][3][1]=new Array('\u0418\u043C\u044F \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430 \u0432 \u043A\u043E\u0434\u0435;','',0,0,1);
I[13][3][2]=new Array('\u0421\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u0442\u0435\u043A\u0441\u0442\u0430 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430;','',1,100,1);
I[13][3][3]=new Array('\u0418\u043C\u044F \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0430 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430.','',0,0,1);
I[14]=new Array();I[14][0]=100;
I[14][1]='';
I[14][2]='0';
I[14][3]=new Array();
I[14][3][0]=new Array('\u0426\u0432\u0435\u0442 \u043A\u0443\u0440\u0441\u043E\u0440\u0430;','',0,0,1);
I[14][3][1]=new Array('\u0420\u0430\u0437\u043C\u0435\u0440 \u043A\u0443\u0440\u0441\u043E\u0440\u0430 \u043F\u0440\u0438 \u043D\u0430\u0432\u0435\u0434\u0435\u043D\u0438\u0438;','',0,0,1);
I[14][3][2]=new Array('\u0422\u0438\u043F \u043A\u0443\u0440\u0441\u043E\u0440\u0430 \u043F\u0440\u0438 \u043D\u0430\u0432\u0435\u0434\u0435\u043D\u0438\u0438;','',1,100,1);
I[14][3][3]=new Array('\u0422\u0438\u043F \u043A\u0443\u0440\u0441\u043E\u0440\u0430 \u043F\u0440\u0438 \u043D\u0430\u0436\u0430\u0442\u0438\u0438.','',0,0,1);
I[15]=new Array();I[15][0]=100;
I[15][1]='';
I[15][2]='0';
I[15][3]=new Array();
I[15][3][0]=new Array('\u0414\u043B\u044F \u043D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u044F \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432 \u0432\u043D\u0443\u0442\u0440\u0438 \u0441\u0440\u0435\u0434\u044B \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0438;','',0,0,1);
I[15][3][1]=new Array('\u0414\u043B\u044F \u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043A \u043F\u0440\u043E\u0433\u0440\u0430\u043C \u043F\u043E\u043C\u043E\u0449\u0438 \u0441\u043B\u0435\u043F\u044B\u043C;','',1,100,1);
I[15][3][2]=new Array('\u0414\u043B\u044F \u043F\u0440\u043E\u0434\u0432\u0438\u043D\u0443\u0442\u044B\u0445 \u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043A \u0432\u043D\u0435\u0448\u043D\u0435\u0433\u043E \u0432\u0438\u0434\u0430;','',0,0,1);
I[15][3][3]=new Array('\u0414\u043B\u044F \u0444\u0443\u043D\u043A\u0446\u0438\u0439 \u0432 \u0440\u0435\u0436\u0438\u043C\u0435 \u0430\u0434\u043C\u0438\u043D\u0438\u0441\u0442\u0440\u0430\u0442\u043E\u0440\u0430.','',0,0,1);
I[16]=new Array();I[16][0]=100;
I[16][1]='';
I[16][2]='0';
I[16][3]=new Array();
I[16][3][0]=new Array('name.position = new Vector2(x,y);','',0,0,1);
I[16][3][1]=new Array('name.location.x = x; name.location.y =y;','',1,100,1);
I[16][3][2]=new Array('name.x = x; name.y = y;','',0,0,1);
I[16][3][3]=new Array('name.location(x,y);','',0,0,1);
I[17]=new Array();I[17][0]=100;
I[17][1]='';
I[17][2]='0';
I[17][3]=new Array();
I[17][3][0]=new Array('Import;','',0,0,1);
I[17][3][1]=new Array('OpenLocalFile;','',0,0,1);
I[17][3][2]=new Array('GetLocalResourceObject;','',1,100,1);
I[17][3][3]=new Array('LoadFile;','',0,0,1);
I[18]=new Array();I[18][0]=100;
I[18][1]='';
I[18][2]='1';
I[18][3]=new Array();
I[18][3][0]=new Array('textbox1.text = ToUpper(textbox2.text);','',1,100,1);


function StartUp(){

//If there's only one question, no need for question navigation controls
	if (QsToShow < 2){
		document.getElementById('QNav').style.display = 'none';
	}
	
//Stash the instructions so they can be redisplayed
	strInstructions = document.getElementById('InstructionsDiv').innerHTML;
	

	

	

	PreloadImages('1.png','2.png','3.png');

	
	CompleteEmptyFeedback();

	SetUpQuestions();
	ClearTextBoxes();
	CreateStatusArray();
	

	
//Check search string for q parameter
	if (document.location.search.length > 0){
		if (ShuffleQs == false){
			var JumpTo = parseInt(document.location.search.substring(1,document.location.search.length))-1;
			if (JumpTo <= QsToShow){
				ChangeQ(JumpTo);
			}
		}
	}
//Undocumented function added 10/12/2004
	ShowSpecialReadingForQuestion();
}

function ShowHideQuestions(){
	document.getElementById('ShowMethodButton').style.display = 'none';
	if (ShowingAllQuestions == false){
		for (var i=0; i<QArray.length; i++){
				QArray[i].style.display = '';
			}
		document.getElementById('Questions').style.listStyleType = 'decimal';
		document.getElementById('OneByOneReadout').style.display = 'none';
		document.getElementById('ShowMethodButton').innerHTML = ShowOneByOneCaption;
		ShowingAllQuestions = true;
	}
	else{
		for (var i=0; i<QArray.length; i++){
				if (i != CurrQNum){
					QArray[i].style.display = 'none';
				}
			}
		document.getElementById('Questions').style.listStyleType = 'none';
		document.getElementById('OneByOneReadout').style.display = '';
		document.getElementById('ShowMethodButton').innerHTML = ShowAllQuestionsCaption;
		ShowingAllQuestions = false;	
	}
	document.getElementById('ShowMethodButton').style.display = 'inline';
}

function CreateStatusArray(){
	var QNum, ANum;
//For each item in the item array
	for (QNum=0; QNum<I.length; QNum++){
//Check if the question still exists (hasn't been nuked by showing a random selection)
		if (document.getElementById('Q_' + QNum) != null){
			State[QNum] = new Array();
			State[QNum][0] = -1; //Score for this q; -1 shows question not done yet
			State[QNum][1] = new Array(); //answers
			for (ANum = 0; ANum<I[QNum][3].length; ANum++){
				State[QNum][1][ANum] = 0; //answer not chosen yet; when chosen, will store its position in the series of choices
			}
			State[QNum][2] = 0; //tries at this q so far
			State[QNum][3] = 0; //incrementing percent-correct values of selected answers
			State[QNum][4] = 0; //penalties incurred for hints
			State[QNum][5] = ''; //Sequence of answers chosen by number
		}
		else{
			State[QNum] = null;
		}
	}
}



function CheckMCAnswer(QNum, ANum, Btn){
//if question doesn't exist, bail
	if (State[QNum].length < 1){return;}
	
//Get the feedback
	Feedback = I[QNum][3][ANum][1];
	
//Now show feedback and bail if question already complete
	if (State[QNum][0] > -1){
//Add an extra message explaining that the question
// is finished if defined by the user
		if (strQuestionFinished.length > 0){Feedback += '<br />' + strQuestionFinished;}
//Show the feedback
		ShowMessage(Feedback);
//New for 6.2.2.1: If you want to mark an answer as correct even when it's the final choice, uncomment this line.
//		if (I[QNum][3][ANum][2] >= 1){Btn.innerHTML = CorrectIndicator;}else{Btn.innerHTML = IncorrectIndicator;}	
		return;
	}
	
//Hide the button while processing
	Btn.style.display = 'none';

//Increment the number of tries
	State[QNum][2]++;
	
//Add the percent-correct value of this answer
	State[QNum][3] += I[QNum][3][ANum][3];
	
//Store the try number in the answer part of the State array, for tracking purposes
	State[QNum][1][ANum] = State[QNum][2];
	if (State[QNum][5].length > 0){State[QNum][5] += ' | ';}
	State[QNum][5] += String.fromCharCode(65+ANum);
	
//Should this answer be accepted as correct?
	if (I[QNum][3][ANum][2] < 1){
//It's wrong

//Mark the answer
		Btn.innerHTML = IncorrectIndicator;
		
//Remove any previous score unless exercise is finished (6.0.3.8+)
		if (Finished == false){
			WriteToInstructions(strInstructions);
		}	
		
//Check whether this leaves just one MC answer unselected, in which case the Q is terminated
		var RemainingAnswer = FinalAnswer(QNum);
		if (RemainingAnswer > -1){
//Behave as if the last answer had been selected, but give no credit for it
//Increment the number of tries
			State[QNum][2]++;		
		
//Calculate the score for this question
			CalculateMCQuestionScore(QNum);
			
//Get the overall score and add it to the feedback
			CalculateOverallScore();
//New for 6.2.2.1
			var QsDone = CheckQuestionsCompleted();
			if ((ContinuousScoring == true)||(Finished == true)){
				Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
			}
			else{
				WriteToInstructions(QsDone);
			}
		}
	}
	else{
//It's right
//Mark the answer
		Btn.innerHTML = CorrectIndicator;
				
//Calculate the score for this question
		CalculateMCQuestionScore(QNum);
		
//New for 6.2.2.0
		var QsDone = CheckQuestionsCompleted();

//Get the overall score and add it to the feedback
		if (ContinuousScoring == true){
			CalculateOverallScore();
			if ((ContinuousScoring == true)||(Finished == true)){
				Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
			}
		}
		else{
			WriteToInstructions(QsDone);
		}
	}
	
//Show the button again
	Btn.style.display = 'inline';
	
//Finally, show the feedback	
	ShowMessage(Feedback);
	
//Check whether all questions are now done
	CheckFinished();
}

function CalculateMCQuestionScore(QNum){
	var Tries = State[QNum][2] + State[QNum][4]; //include tries and hint penalties
	var PercentCorrect = State[QNum][3];
	var TotAns = GetTotalMCAnswers(QNum);
	var HintPenalties = State[QNum][4];
	
//Make sure it's not already complete

	if (State[QNum][0] < 0){
//Allow for Hybrids
		if (HintPenalties >= 1){
			State[QNum][0] = 0;
		}
		else{
//This line calculates the score for this question
			if (TotAns == 1){
				State[QNum][0] = 1;
			}
			else{
				State[QNum][0] = ((TotAns-((Tries*100)/State[QNum][3]))/(TotAns-1));
			}
		}
//Fix for Safari bug added for version 6.0.3.42 (negative infinity problem)
		if ((State[QNum][0] < 0)||(State[QNum][0] == Number.NEGATIVE_INFINITY)){
			State[QNum][0] = 0;
		}
	}
}

function GetTotalMCAnswers(QNum){
	var Result = 0;
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		if (I[QNum][3][ANum][4] == 1){ //This is an MC answer
			Result++;
		}
	}
	return Result;
}

function FinalAnswer(QNum){
	var UnchosenAnswers = 0;
	var FinalAnswer = -1;
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		if (I[QNum][3][ANum][4] == 1){ //This is an MC answer
			if (State[QNum][1][ANum] < 1){ //This answer hasn't been chosen yet
				UnchosenAnswers++;
				FinalAnswer = ANum;
			}
		}
	}
	if (UnchosenAnswers == 1){
		return FinalAnswer;
	}
	else{
		return -1;
	}
}





function CalculateOverallScore(){
	var TotalWeighting = 0;
	var TotalScore = 0;
	
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] > -1){
				TotalWeighting += I[QNum][0];
				TotalScore += (I[QNum][0] * State[QNum][0]);
			}
		}
	}
	if (TotalWeighting > 0){
		Score = Math.floor((TotalScore/TotalWeighting)*100);
	}
	else{
//if TotalWeighting is 0, no questions so far have any value, so 
//no penalty should be shown.
		Score = 100; 
	}
}

//New for 6.2.2.0
function CheckQuestionsCompleted(){
	if (ShowCompletedSoFar == false){return '';}
	var QsCompleted = 0;
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] >= 0){
				QsCompleted++;
			}
		}
	}
//Fixes for 6.2.2.2
	if (QsCompleted >= QArray.length){
		return ExerciseCompleted;
	}
	else{
		return CompletedSoFar + ' ' + QsCompleted + '/' + QArray.length + '.';
	}
}

function CheckFinished(){
	var FB = '';
	var AllDone = true;
	for (var QNum=0; QNum<State.length; QNum++){
		if (State[QNum] != null){
			if (State[QNum][0] < 0){
				AllDone = false;
			}
		}
	}
	if (AllDone == true){
	
//Report final score and submit if necessary
		CalculateOverallScore();
		FB = YourScoreIs + ' ' + Score + '%.';
		if (ShowCorrectFirstTime == true){
			var CFT = 0;
			for (QNum=0; QNum<State.length; QNum++){
				if (State[QNum] != null){
					if (State[QNum][0] >= 1){
						CFT++;
					}
				}
			}
			FB += '<br />' + CorrectFirstTime + ' ' + CFT + '/' + QsToShow;
		}
		
//New for 6.2.2.0
		FB += '<br />' + ExerciseCompleted;
		
		WriteToInstructions(FB);
		
		Finished == true;




		TimeOver = true;
		Locked = true;
		


		Finished = true;
		Detail = '<?xml version="1.0"?><hpnetresult><fields>';
		for (QNum=0; QNum<State.length; QNum++){
			if (State[QNum] != null){
				if (State[QNum][5].length > 0){
					Detail += '<field><fieldname>Question #' + (QNum+1) + '</fieldname><fieldtype>question-tracking</fieldtype><fieldlabel>Q ' + (QNum+1) + '</fieldlabel><fieldlabelid>QuestionTrackingField</fieldlabelid><fielddata>' + State[QNum][5] + '</fielddata></field>';
				}
			}
		}
		Detail += '</fields></hpnetresult>';
	}

}





//CORE CODE FOR CHECKING SHORT ANSWER GUESSES AGAINST ANSWER ARRAYS

var CaseSensitive = false;
var ShowAlsoCorrect = true;
var PleaseEnter = '&#x0412;&#x0432;&#x0435;&#x0434;&#x0438; &#x0434;&#x043E;&#x0433;&#x0430;&#x0434;&#x043A;&#x0443;';
var HybridTries = 2;
var PartlyIncorrect = '&#x041E;&#x0442;&#x0432;&#x0435;&#x0442; &#x0447;&#x0430;&#x0441;&#x0442;&#x0438;&#x0447;&#x043D;&#x043E; &#x043D;&#x0435;&#x0432;&#x0435;&#x0440;&#x0435;&#x043D;';
var CorrectList = '&#x041F;&#x0440;&#x0430;&#x0432;&#x0438;&#x043B;&#x044C;&#x043D;&#x044B;&#x0435; &#x043E;&#x0442;&#x0432;&#x0435;&#x0442;&#x044B;:';
var NextCorrect = ' &#x0414;&#x043E;&#x0431;&#x0430;&#x0432;&#x043B;&#x0435;&#x043D;&#x0430; &#x0441;&#x043B;&#x0435;&#x0434;&#x0443;&#x044E;&#x0449;&#x0430;&#x044F; &#x043F;&#x0440;&#x0430;&#x0432;&#x0438;&#x043B;&#x044C;&#x043D;&#x0430;&#x044F; &#x0431;&#x0443;&#x043A;&#x0432;&#x0430;:';
var CurrBox = null;

function TrackFocus(BoxID){
	InTextBox = true;
	CurrBox = document.getElementById(BoxID);
}

function LeaveGap(){
	InTextBox = false;
}

function TypeChars(Chars){
	if (CurrBox != null){
		if (CurrBox.style.display != 'none'){
			var selObj = SelObj(CurrBox);
			selObj.setSelText(Chars);
		}
	}
}

function CheckGuess(Guess, Answer, CaseSensitive, PercentCorrect, Feedback){
	this.Guess = Guess;
	this.Answer = Answer;
	this.PercentCorrect = PercentCorrect;
	this.Feedback = Feedback;
	if (CaseSensitive == false){
		this.WorkingGuess = Guess.toLowerCase();
		this.WorkingAnswer = Answer.toLowerCase();
	}
	else{
		this.WorkingGuess = Guess;
		this.WorkingAnswer = Answer;				
	}
	this.Hint = '';
	this.HintPenalty = 1/Answer.length;
	this.CorrectStart = '';
	this.WrongMiddle = '';
	this.CorrectEnd = '';
	this.PercentMatch = 0;
	this.DoCheck();
}

function CheckGuess_DoCheck(){
//Check if it's an exact match
	if (this.WorkingAnswer == this.WorkingGuess){
		this.PercentMatch = 100;
		this.CorrectStart = this.Guess;
	return;
	}
//Figure out how much of the beginning is correct
	var i = 0;
	var CorrectChars = 0;
	while (this.WorkingAnswer.charAt(i) == this.WorkingGuess.charAt(i)){
		i++;
		CorrectChars++;
	}
//Stash the hint
	this.Hint = this.Answer.charAt(i);
	
	this.CorrectStart = this.Guess.substring(0, i);
	
//If there's more to the answer, look at the rest of it
	if (i<this.Guess.length){
	
//Figure out how much of the end is correct
		var j = this.WorkingGuess.length-1;
		var k = this.WorkingAnswer.length-1;
		while ((j>=i)&&((this.WorkingAnswer.charAt(k) == this.WorkingGuess.charAt(j))&&(CorrectChars < this.Answer.length))){
			CorrectChars++;
			j--;
			k--;
		}
		this.CorrectEnd = this.Guess.substring(j+1, this.Guess.length);
		this.WrongMiddle = this.Guess.substring(i, j+1);
	}
	if (TrimString(this.WrongMiddle).length < 1){this.WrongMiddle = '_';}
//Calculate match score based on how much of the guess is correct
	if (CorrectChars < this.Answer.length){
		this.PercentMatch = Math.floor(100*CorrectChars)/this.Answer.length;
	}
	else{
		this.PercentMatch = Math.floor((100 * CorrectChars)/this.Guess.length);
	}	
}

CheckGuess.prototype.DoCheck = CheckGuess_DoCheck;

function CheckAnswerArray(CaseSensitive){
	this.CaseSensitive = CaseSensitive;
	this.Answers = new Array();
	this.Score = 0;
	this.Feedback = '';
	this.Hint = '';
	this.HintPenalty = 0;
	this.MatchedAnswerLength = 1;
	this.CompleteMatch = false;
	this.MatchNum = -1;
}

function CheckAnswerArray_AddAnswer(Guess, Answer, PercentCorrect, Feedback){
	this.Answers.push(new CheckGuess(Guess, Answer, this.CaseSensitive, PercentCorrect, Feedback));
}

CheckAnswerArray.prototype.AddAnswer = CheckAnswerArray_AddAnswer;

function CheckAnswerArray_ClearAll(){
	this.Answers.length = 0;
}

CheckAnswerArray.prototype.ClearAll = CheckAnswerArray_ClearAll;

function CheckAnswerArray_GetBestMatch(){
//First check for a 100% match
	for (var i=0; i<this.Answers.length; i++){
		if (this.Answers[i].PercentMatch == 100){
			this.Feedback = this.Answers[i].Feedback;
			this.Score = this.Answers[i].PercentCorrect;
			this.CompleteMatch = true;
			this.MatchNum = i;
			return;
		}
	}
//Now check for the best alternative match
	var PercentMatch = 0;
	var BestMatch = -1;
	for (i=0; i<this.Answers.length; i++){
		if ((this.Answers[i].PercentMatch > PercentMatch)&&(this.Answers[i].PercentCorrect == 100)){
			BestMatch = i;
			PercentMatch = this.Answers[i].PercentMatch;
		}
	}
	if (BestMatch > -1){
		this.Score = this.Answers[BestMatch].PercentMatch;
		this.Feedback = PartlyIncorrect + ' ';
		this.Feedback += '<span class="PartialAnswer">' + this.Answers[BestMatch].CorrectStart;
		this.Feedback += '<span class="Highlight">' + this.Answers[BestMatch].WrongMiddle + '</span>';
		this.Feedback += this.Answers[BestMatch].CorrectEnd + '</span>';
		this.Hint = '<span class="PartialAnswer">' + this.Answers[BestMatch].CorrectStart;
		this.Hint += '<span class="Highlight">' + this.Answers[BestMatch].Hint + '</span></span>';
		this.HintPenalty = this.Answers[BestMatch].HintPenalty;
	}
	else{
		this.Score = 0;
		this.Feedback = '';
	}
}

CheckAnswerArray.prototype.GetBestMatch = CheckAnswerArray_GetBestMatch;

function CheckShortAnswer(QNum){
//bail if question doesn't exist or exercise finished
	if ((State[QNum].length < 1)||(Finished == true)){return;}
	
//bail if question already complete
	if (State[QNum][0] > -1){return;}

//Get the guess (TrimString added to fix bug for 6.0.4.3)
	var G = TrimString(document.getElementById('Q_' + QNum + '_Guess').value);
	
//If no guess, bail with message; no penalty
	if (G.length < 1){
		ShowMessage(PleaseEnter);
		return;
	}

//Increment tries
	State[QNum][2]++;
	
//Create a check object
	var CA = new CheckAnswerArray(CaseSensitive);

	CA.ClearAll();
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		CA.AddAnswer(G, I[QNum][3][ANum][0], I[QNum][3][ANum][3], I[QNum][3][ANum][1]);
	}
	CA.GetBestMatch();
	
//Store any match in the state tracking field
	if (State[QNum][5].length > 0){State[QNum][5] += ' | ';}
	if (CA.MatchNum > -1){
		State[QNum][5] += String.fromCharCode(65+CA.MatchNum);
	}
//Else store the student's answer
	else{
		State[QNum][5] += G;
	}

//Add the percent correct value for this answer to the Q State (works for all
//situations, wrong or right)
	State[QNum][3] += CA.Score;
	
//Now branch, based on the nature of the match
//Is it a complete match?
	if (CA.CompleteMatch == true){
		
//Is it with a wrong answer, or a right answer?
		if (CA.Score == 100){
//It's right
			CalculateShortAnsQuestionScore(QNum);
			
//New for 6.2.2.0
			var QsDone = CheckQuestionsCompleted();
			
//Get correct answer list if required, assuming there are any other correct alternatives
			if (ShowAlsoCorrect == true){
				var AlsoCorrectList = GetCorrectList(QNum, G, false);
				if (AlsoCorrectList.length > 0){
					CA.Feedback += '<br />' + CorrectList + '<br />' + AlsoCorrectList;
				}
			}	
		
//Get the overall score and add it to the feedback
			if (ContinuousScoring == true){
				CalculateOverallScore();
				CA.Feedback += '<br />' + YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone;
				WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
			}
			else{
				WriteToInstructions(QsDone);
			}
			ShowMessage(CA.Feedback);
//Put the answer in
			ReplaceGuessBox(QNum, G);
			CheckFinished();
			return;
		}
	}
	
//Otherwise, it's a match to a predicted wrong/partially correct, or a partial
//match to a right answer
	if (CA.Feedback.length < 1){CA.Feedback = DefaultWrong;}
//Remove any previous score unless exercise is finished (6.0.3.8+)
	if (Finished == false){
		WriteToInstructions(strInstructions);
	}	
	ShowMessage(CA.Feedback);

//If necessary, switch a hybrid question to m/c
	if (State[QNum][2] >= HybridTries){
		SwitchHybridDisplay(QNum);
	}
}

function CalculateShortAnsQuestionScore(QNum){
	var Tries = State[QNum][2] + State[QNum][4]; //include tries and hint penalties;
	var PercentCorrect = State[QNum][3];
	var HintPenalties = State[QNum][4];

//Make sure it's not already complete
	if (State[QNum][0] < 0){
		if (HintPenalties >= 1){
			State[QNum][0] = 0;
		}
		else{
			State[QNum][0] = (PercentCorrect/(100*Tries));
		}
		if (State[QNum][0] < 0){
			State[QNum][0] = 0;
		}
	}
}

function SwitchHybridDisplay(QNum){
	if (document.getElementById('Q_' + QNum + '_Hybrid_MC') != null){
		document.getElementById('Q_' + QNum + '_Hybrid_MC').style.display = '';
		if (document.getElementById('Q_' + QNum + '_SA') != null){
			document.getElementById('Q_' + QNum + '_SA').style.display = 'none';
		}
	}
}

function GetCorrectArray(QNum){
	var Result = new Array();
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
		if (I[QNum][3][ANum][2] == 1){ //This is an acceptable correct answer
			Result.push(I[QNum][3][ANum][0]);
		}
	}	
	return Result;
}

function GetCorrectList(QNum, Answer, IncludeAnswer){
	var As = GetCorrectArray(QNum);
	var Result = '';
	for (var ANum=0; ANum<As.length; ANum++){
		if ((IncludeAnswer == true)||(As[ANum] != Answer)){
			Result += As[ANum] + '<br />';
		}
	}
	return Result;
}

function GetFirstCorrectAnswer(QNum){
	var As = GetCorrectArray(QNum);
	if (As.length > 0){
		return As[0];
	}
	else{
		return '';
	}
}

function ReplaceGuessBox(QNum, Ans){
	if (document.getElementById('Q_' + QNum + '_SA') != null){
		var El = document.getElementById('Q_' + QNum + '_SA');
		while (El.childNodes.length > 0){
			El.removeChild(El.childNodes[0]);
		}
		var A = document.createElement('span');
		A.setAttribute('class', 'Answer');
		var T = document.createTextNode(Ans);
		A.appendChild(T);
		El.appendChild(A);
	}
}



function ShowAnswers(QNum){
//bail if question doesn't exist or exercise finished
	if ((State[QNum].length < 1)||(Finished == true)){return;}
	
//Get the answer list to display
	var Ans = GetCorrectList(QNum, '', false);
	Ans = CorrectList + '<br />' + Ans;
	
//Display feedback
	ShowMessage(Ans);
	
//Set the score for this question to 0 if no score yet 
	if (State[QNum][0] < 1){
		State[QNum][0] = 0;
	}

//Get the first correct answer
	var FirstAns = GetFirstCorrectAnswer(QNum);
	
//Replace the textbox
	ReplaceGuessBox(QNum, FirstAns);
	
//New for 6.2.2.0: Get scores and feedback
	var QsDone = CheckQuestionsCompleted();
	
	if (ContinuousScoring == true){
		CalculateOverallScore();
		WriteToInstructions(YourScoreIs + ' ' + Score + '%.' + '<br />' + QsDone);
	}
	
//This may be the last, so check finished status
	CheckFinished();
}





function ShowHint(QNum){
//bail if question doesn't exist or exercise finished
	if ((State[QNum].length < 1)||(Finished == true)){return;}
	
//bail if question already complete
	if (State[QNum][0] > -1){return;}

//Get the guess
	var G = document.getElementById('Q_' + QNum + '_Guess').value;
	
//If no guess, give the first correct bit
	if (G.length < 1){
		var Ans = GetFirstCorrectAnswer(QNum);
		var Hint = Ans.charAt(0);
		ShowMessage(NextCorrect + '<br />' + Hint);
//Penalty for hint
		State[QNum][4] += (1/Ans.length);
		return;
	}

//Increment tries
	State[QNum][2]++;
	
//Create a check object
	var CA = new CheckAnswerArray(CaseSensitive);

	CA.ClearAll();
	for (var ANum=0; ANum<I[QNum][3].length; ANum++){
//Use only correct answers
		if (I[QNum][3][ANum][2] == 1){
			CA.AddAnswer(G, I[QNum][3][ANum][0], I[QNum][3][ANum][3], I[QNum][3][ANum][1]);
		}
	}
	CA.GetBestMatch();
	if (CA.CompleteMatch == true){
//It's right!
		CheckShortAnswer(QNum);
		return;
	}
	else{
		if (CA.Hint.length > 0){
			ShowMessage(NextCorrect + '<br />' + CA.Hint);
			State[QNum][4] += CA.HintPenalty;
		}
		else{
			ShowMessage(DefaultWrong + '<br />' + NextCorrect + '<br />' + GetFirstCorrectAnswer(QNum).charAt(0));
		}
	}
}









//-->

//]]>

</script>


</head>

<body onload="StartUp()" id="TheBody" >

<!-- BeginTopNavButtons -->


<div class="NavButtonBar" id="TopNavBar">


<button class="NavButton" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onclick="location='contents.htm'; return false;"> &#x0441;&#x043E;&#x0434;&#x0435;&#x0440;&#x0436;&#x0430;&#x043D;&#x0438;&#x0435; </button>



<button class="NavButton" onclick="location='jcross1.htm'; return false;">=&gt;</button>


</div>



<!-- EndTopNavButtons -->

<div class="Titles">
	<h2 class="ExerciseTitle">&#x0421;&#x0422;&#x0412;&#x041E;&#x0420;&#x0415;&#x041D;&#x041D;&#x042F; &#x0406;&#x041D;&#x0422;&#x0415;&#x0420;&#x0424;&#x0415;&#x0419;&#x0421;&#x0423; &#x041F;&#x0420;&#x041E;&#x0413;&#x0420;&#x0410;&#x041C;&#x0418; &#x0423; &#x042F;&#x0417;&#x0418;&#x041A;&#x0423; &#x0421;# &#x0417;&#x0410; &#x0414;&#x041E;&#x041F;&#x041E;&#x041C;&#x041E;&#x0413;&#x041E;&#x0423; WIN FORMS</h2>

	<h3 class="ExerciseSubtitle">&#x041F;&#x0440;&#x043E;&#x0432;&#x0435;&#x0440;&#x043E;&#x0447;&#x043D;&#x044B;&#x0435; &#x0432;&#x043E;&#x043F;&#x0440;&#x043E;&#x0441;&#x044B;</h3>



</div>

<div id="InstructionsDiv" class="StdDiv">
	<div id="Instructions">&#x041E;&#x0442;&#x0432;&#x0435;&#x0442;&#x044C; &#x043D;&#x0430; &#x0432;&#x043E;&#x043F;&#x0440;&#x043E;&#x0441;&#x044B;</div>
</div>


<div id="ContainerDiv">



<div class="ExerciseContainer">

<div id="QNav" class="QuestionNavigation">

<p style="text-align: right;">
<button id="ShowMethodButton" class="FuncButton" onclick="ShowHideQuestions(); return false;">&#x041F;&#x043E;&#x043A;&#x0430;&#x0436;&#x0438; &#x0432;&#x0441;&#x0435; &#x043E;&#x0442;&#x0432;&#x0435;&#x0442;&#x044B;</button>
</p>

<div id="OneByOneReadout">
<button id="PrevQButton" class="FuncButton" onclick="ChangeQ(-1); return false;">&lt;=</button>

<span id="QNumReadout" class="QNum">&#160;</span>

<button id="NextQButton" class="FuncButton" onclick="ChangeQ(1); return false;">=&gt;</button>
<br />
</div>

</div>
 
<ol class="QuizQuestions" id="Questions">
<li class="QuizQuestion" id="Q_0" style="display: none;"><div class="QuestionText">Windows forms &#x0438;&#x0441;&#x043F;&#x043E;&#x043B;&#x044C;&#x0437;&#x0443;&#x0435;&#x0442;&#x0441;&#x044F; &#x0434;&#x043B;&#x044F; &#x0441;&#x043E;&#x0437;&#x0434;&#x0430;&#x043D;&#x0438;&#x044F;</div><ol class="MCAnswers"><li id="Q_0_0"><button class="FuncButton" id="Q_0_0_Btn" onclick="CheckMCAnswer(0,0,this)">?</button>&#160;&#160;&#x041F;&#x0440;&#x0438;&#x043B;&#x043E;&#x0436;&#x0435;&#x043D;&#x0438;&#x0439; &#x0434;&#x043B;&#x044F; &#x043A;&#x043E;&#x043C;&#x0430;&#x043D;&#x0434;&#x043D;&#x043E;&#x0439; &#x043A;&#x043E;&#x043D;&#x0441;&#x043E;&#x043B;&#x0438;</li><li id="Q_0_1"><button class="FuncButton" id="Q_0_1_Btn" onclick="CheckMCAnswer(0,1,this)">?</button>&#160;&#160;&#x041F;&#x0440;&#x0438;&#x043B;&#x043E;&#x0436;&#x0435;&#x043D;&#x0438;&#x0439; &#x043D;&#x0430; &#x0431;&#x0430;&#x0437;&#x0435; Wpf</li><li id="Q_0_2"><button class="FuncButton" id="Q_0_2_Btn" onclick="CheckMCAnswer(0,2,this)">?</button>&#160;&#160;&#x0414;&#x0438;&#x0437;&#x0430;&#x0439;&#x043D;&#x0430; &#x0438;&#x043D;&#x0442;&#x0435;&#x0440;&#x0444;&#x0435;&#x0439;&#x0441;&#x0430; &#x0432;&#x0435;&#x0431;&#x0441;&#x0430;&#x0439;&#x0442;&#x043E;&#x0432;</li><li id="Q_0_3"><button class="FuncButton" id="Q_0_3_Btn" onclick="CheckMCAnswer(0,3,this)">?</button>&#160;&#160;&#x0414;&#x0438;&#x0437;&#x0430;&#x0439;&#x043D;&#x0430; &#x0438;&#x043D;&#x0442;&#x0435;&#x0440;&#x0444;&#x0435;&#x0439;&#x0441;&#x0430; &#x043F;&#x0440;&#x0438;&#x043B;&#x043E;&#x0436;&#x0435;&#x043D;&#x0438;&#x044F;</li></ol></li>
<li class="QuizQuestion" id="Q_1" style="display: none;"><div class="QuestionText">&#x042D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442; &#x0438;&#x043D;&#x0442;&#x0435;&#x0440;&#x0444;&#x0435;&#x0439;&#x0441;&#x0430; Button &#x044D;&#x0442;&#x043E;</div><ol class="MCAnswers"><li id="Q_1_0"><button class="FuncButton" id="Q_1_0_Btn" onclick="CheckMCAnswer(1,0,this)">?</button>&#160;&#160;&#x0410;&#x043D;&#x0438;&#x043C;&#x0430;&#x0446;&#x0438;&#x044F;</li><li id="Q_1_1"><button class="FuncButton" id="Q_1_1_Btn" onclick="CheckMCAnswer(1,1,this)">?</button>&#160;&#160;&#x0412;&#x044B;&#x043A;&#x0438;&#x0434;&#x043D;&#x043E;&#x0439; &#x0441;&#x043F;&#x0438;&#x0441;&#x043E;&#x043A;</li><li id="Q_1_2"><button class="FuncButton" id="Q_1_2_Btn" onclick="CheckMCAnswer(1,2,this)">?</button>&#160;&#160;&#x041A;&#x043D;&#x043E;&#x043F;&#x043A;&#x0430;</li><li id="Q_1_3"><button class="FuncButton" id="Q_1_3_Btn" onclick="CheckMCAnswer(1,3,this)">?</button>&#160;&#160;&#x0413;&#x0430;&#x043B;&#x043E;&#x0447;&#x043A;&#x0430;</li></ol></li>
<li class="QuizQuestion" id="Q_2" style="display: none;"><div class="QuestionText">&#x042D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442; &#x0438;&#x043D;&#x0442;&#x0435;&#x0440;&#x0444;&#x0435;&#x0439;&#x0441;&#x0430; GroupBox &#x044D;&#x0442;&#x043E;</div><ol class="MCAnswers"><li id="Q_2_0"><button class="FuncButton" id="Q_2_0_Btn" onclick="CheckMCAnswer(2,0,this)">?</button>&#160;&#160;&#x0413;&#x0440;&#x0443;&#x043F;&#x043F;&#x0438;&#x0440;&#x043E;&#x0432;&#x043A;&#x0430; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x043E;&#x0432;</li><li id="Q_2_1"><button class="FuncButton" id="Q_2_1_Btn" onclick="CheckMCAnswer(2,1,this)">?</button>&#160;&#160;&#x0412;&#x044B;&#x043A;&#x0438;&#x0434;&#x043D;&#x043E;&#x0439; &#x0441;&#x043F;&#x0438;&#x0441;&#x043E;&#x043A;</li><li id="Q_2_2"><button class="FuncButton" id="Q_2_2_Btn" onclick="CheckMCAnswer(2,2,this)">?</button>&#160;&#160;&#x0410;&#x043D;&#x0438;&#x043C;&#x0430;&#x0446;&#x0438;&#x044F;</li><li id="Q_2_3"><button class="FuncButton" id="Q_2_3_Btn" onclick="CheckMCAnswer(2,3,this)">?</button>&#160;&#160;&#x041A;&#x043D;&#x043E;&#x043F;&#x043A;&#x0430;</li></ol></li>
<li class="QuizQuestion" id="Q_3" style="display: none;"><div class="QuestionText">&#x042D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442; &#x0438;&#x043D;&#x0442;&#x0435;&#x0440;&#x0444;&#x0435;&#x0439;&#x0441;&#x0430; TextBox &#x044D;&#x0442;&#x043E;</div><ol class="MCAnswers"><li id="Q_3_0"><button class="FuncButton" id="Q_3_0_Btn" onclick="CheckMCAnswer(3,0,this)">?</button>&#160;&#160;&#x0413;&#x0440;&#x0443;&#x043F;&#x043F;&#x0438;&#x0440;&#x043E;&#x0432;&#x043A;&#x0430; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x043E;&#x0432;</li><li id="Q_3_1"><button class="FuncButton" id="Q_3_1_Btn" onclick="CheckMCAnswer(3,1,this)">?</button>&#160;&#160;&#x0412;&#x0432;&#x043E;&#x0434; &#x0422;&#x0435;&#x043A;&#x0441;&#x0442;&#x0430;</li><li id="Q_3_2"><button class="FuncButton" id="Q_3_2_Btn" onclick="CheckMCAnswer(3,2,this)">?</button>&#160;&#160;&#x0410;&#x043D;&#x0438;&#x043C;&#x0430;&#x0446;&#x0438;&#x044F;</li><li id="Q_3_3"><button class="FuncButton" id="Q_3_3_Btn" onclick="CheckMCAnswer(3,3,this)">?</button>&#160;&#160;&#x041A;&#x043D;&#x043E;&#x043F;&#x043A;&#x0430;</li></ol></li>
<li class="QuizQuestion" id="Q_4" style="display: none;"><div class="QuestionText">&#x042D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442; &#x0438;&#x043D;&#x0442;&#x0435;&#x0440;&#x0444;&#x0435;&#x0439;&#x0441;&#x0430; ComboBox &#x044D;&#x0442;&#x043E;</div><ol class="MCAnswers"><li id="Q_4_0"><button class="FuncButton" id="Q_4_0_Btn" onclick="CheckMCAnswer(4,0,this)">?</button>&#160;&#160;&#x0413;&#x0440;&#x0443;&#x043F;&#x043F;&#x0438;&#x0440;&#x043E;&#x0432;&#x043A;&#x0430; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x043E;&#x0432;</li><li id="Q_4_1"><button class="FuncButton" id="Q_4_1_Btn" onclick="CheckMCAnswer(4,1,this)">?</button>&#160;&#160;&#x0412;&#x044B;&#x043A;&#x0438;&#x0434;&#x043D;&#x043E;&#x0439; &#x0441;&#x043F;&#x0438;&#x0441;&#x043E;&#x043A;</li><li id="Q_4_2"><button class="FuncButton" id="Q_4_2_Btn" onclick="CheckMCAnswer(4,2,this)">?</button>&#160;&#160;&#x0410;&#x043D;&#x0438;&#x043C;&#x0430;&#x0446;&#x0438;&#x044F;</li><li id="Q_4_3"><button class="FuncButton" id="Q_4_3_Btn" onclick="CheckMCAnswer(4,3,this)">?</button>&#160;&#160;&#x041A;&#x043D;&#x043E;&#x043F;&#x043A;&#x0430;</li></ol></li>
<li class="QuizQuestion" id="Q_5" style="display: none;"><div class="QuestionText">&#x0427;&#x0442;&#x043E; &#x044D;&#x0442;&#x043E; &#x0437;&#x0430; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;? <img src="1.png" alt="1.png" title="1" width="90" height="47"/></div><ol class="MCAnswers"><li id="Q_5_0"><button class="FuncButton" id="Q_5_0_Btn" onclick="CheckMCAnswer(5,0,this)">?</button>&#160;&#160;PictureBox</li><li id="Q_5_1"><button class="FuncButton" id="Q_5_1_Btn" onclick="CheckMCAnswer(5,1,this)">?</button>&#160;&#160;ComboBox</li><li id="Q_5_2"><button class="FuncButton" id="Q_5_2_Btn" onclick="CheckMCAnswer(5,2,this)">?</button>&#160;&#160;Button</li><li id="Q_5_3"><button class="FuncButton" id="Q_5_3_Btn" onclick="CheckMCAnswer(5,3,this)">?</button>&#160;&#160;CheckBox</li></ol></li>
<li class="QuizQuestion" id="Q_6" style="display: none;"><div class="QuestionText">&#x0427;&#x0442;&#x043E; &#x044D;&#x0442;&#x043E; &#x0437;&#x0430; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;? <img src="2.png" alt="2.png" title="2" width="203" height="26"/></div><ol class="MCAnswers"><li id="Q_6_0"><button class="FuncButton" id="Q_6_0_Btn" onclick="CheckMCAnswer(6,0,this)">?</button>&#160;&#160;PictureBox</li><li id="Q_6_1"><button class="FuncButton" id="Q_6_1_Btn" onclick="CheckMCAnswer(6,1,this)">?</button>&#160;&#160;ComboBox</li><li id="Q_6_2"><button class="FuncButton" id="Q_6_2_Btn" onclick="CheckMCAnswer(6,2,this)">?</button>&#160;&#160;Button</li><li id="Q_6_3"><button class="FuncButton" id="Q_6_3_Btn" onclick="CheckMCAnswer(6,3,this)">?</button>&#160;&#160;CheckBox</li></ol></li>
<li class="QuizQuestion" id="Q_7" style="display: none;"><div class="QuestionText">&#x0427;&#x0442;&#x043E; &#x044D;&#x0442;&#x043E; &#x0437;&#x0430; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;? <img src="3.png" alt="3.png" title="3" width="108" height="38"/></div><ol class="MCAnswers"><li id="Q_7_0"><button class="FuncButton" id="Q_7_0_Btn" onclick="CheckMCAnswer(7,0,this)">?</button>&#160;&#160;Button</li><li id="Q_7_1"><button class="FuncButton" id="Q_7_1_Btn" onclick="CheckMCAnswer(7,1,this)">?</button>&#160;&#160;Label</li><li id="Q_7_2"><button class="FuncButton" id="Q_7_2_Btn" onclick="CheckMCAnswer(7,2,this)">?</button>&#160;&#160;PictureBox</li><li id="Q_7_3"><button class="FuncButton" id="Q_7_3_Btn" onclick="CheckMCAnswer(7,3,this)">?</button>&#160;&#160;CheckBox</li></ol></li>
<li class="QuizQuestion" id="Q_8" style="display: none;"><div class="QuestionText">&#x0412;&#x044B;&#x0431;&#x0435;&#x0440;&#x0435;&#x0442;&#x0435;, &#x043A;&#x0430;&#x043A;&#x0438;&#x0435; &#x0438;&#x0437; &#x044D;&#x0442;&#x0438; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x043E;&#x0432; &#x0438;&#x043D;&#x0442;&#x0435;&#x0440;&#x0444;&#x0435;&#x0439;&#x0441;&#x0430; &#x0438;&#x0441;&#x043F;&#x043E;&#x043B;&#x044C;&#x0437;&#x0443;&#x044E;&#x0442;&#x0441;&#x044F; windows forms &#x043F;&#x043E; &#x0443;&#x043C;&#x043E;&#x043B;&#x0447;&#x0430;&#x043D;&#x0438;&#x044E;</div><ol class="MCAnswers"><li id="Q_8_0"><button class="FuncButton" id="Q_8_0_Btn" onclick="CheckMCAnswer(8,0,this)">?</button>&#160;&#160;Button, ListBox, ComboBox;</li><li id="Q_8_1"><button class="FuncButton" id="Q_8_1_Btn" onclick="CheckMCAnswer(8,1,this)">?</button>&#160;&#160;ListBox, VideoPlayer, CheckBox;</li><li id="Q_8_2"><button class="FuncButton" id="Q_8_2_Btn" onclick="CheckMCAnswer(8,2,this)">?</button>&#160;&#160;CheckBox, ComboBox, Animation;</li><li id="Q_8_3"><button class="FuncButton" id="Q_8_3_Btn" onclick="CheckMCAnswer(8,3,this)">?</button>&#160;&#160;Label, Calculator, Button.</li></ol></li>
<li class="QuizQuestion" id="Q_9" style="display: none;"><div class="QuestionText">&#x0427;&#x0442;&#x043E; &#x043F;&#x0440;&#x043E;&#x0438;&#x0437;&#x043E;&#x0439;&#x0434;&#x0435;&#x0442; &#x0435;&#x0441;&#x043B;&#x0438; &#x0432; &#x0440;&#x0435;&#x0436;&#x0438;&#x043C;&#x0435; &#x0440;&#x0435;&#x0434;&#x0430;&#x043A;&#x0442;&#x0438;&#x0440;&#x043E;&#x0432;&#x0430;&#x043D;&#x0438;&#x044F; &#x0434;&#x0432;&#x0430;&#x0436;&#x0434;&#x044B; &#x043D;&#x0430;&#x0436;&#x0430;&#x0442;&#x044C; &#x043D;&#x0430; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442; Button?</div><ol class="MCAnswers"><li id="Q_9_0"><button class="FuncButton" id="Q_9_0_Btn" onclick="CheckMCAnswer(9,0,this)">?</button>&#160;&#160;&#x041A;&#x043D;&#x043E;&#x043F;&#x043A;&#x0430; &#x0441;&#x0440;&#x0430;&#x0431;&#x043E;&#x0442;&#x0430;&#x0435;&#x0442;;</li><li id="Q_9_1"><button class="FuncButton" id="Q_9_1_Btn" onclick="CheckMCAnswer(9,1,this)">?</button>&#160;&#160;&#x042D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442; &#x0443;&#x0434;&#x0430;&#x043B;&#x0438;&#x0442;&#x0441;&#x044F;;</li><li id="Q_9_2"><button class="FuncButton" id="Q_9_2_Btn" onclick="CheckMCAnswer(9,2,this)">?</button>&#160;&#160;&#x0421;&#x043E;&#x0437;&#x0434;&#x0430;&#x0441;&#x0442;&#x0441;&#x044F; &#x043D;&#x043E;&#x0432;&#x044B;&#x0439; &#x0438;&#x0432;&#x0435;&#x043D;&#x0442;;</li><li id="Q_9_3"><button class="FuncButton" id="Q_9_3_Btn" onclick="CheckMCAnswer(9,3,this)">?</button>&#160;&#160;&#x042D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442; &#x043C;&#x043E;&#x0436;&#x043D;&#x043E; &#x0431;&#x0443;&#x0434;&#x0435;&#x0442; &#x0442;&#x0440;&#x0430;&#x043D;&#x0441;&#x0444;&#x043E;&#x0440;&#x043C;&#x0438;&#x0440;&#x043E;&#x0432;&#x0430;&#x0442;&#x044C;.</li></ol></li>
<li class="QuizQuestion" id="Q_10" style="display: none;"><div class="QuestionText">&#x0427;&#x0442;&#x043E; &#x0442;&#x0430;&#x043A;&#x043E;&#x0435; &#x0438;&#x0432;&#x0435;&#x043D;&#x0442;?</div><ol class="MCAnswers"><li id="Q_10_0"><button class="FuncButton" id="Q_10_0_Btn" onclick="CheckMCAnswer(10,0,this)">?</button>&#160;&#160;&#x0414;&#x0435;&#x0439;&#x0441;&#x0442;&#x0432;&#x0438;&#x0435; &#x043D;&#x0430; &#x043A;&#x043E;&#x0442;&#x043E;&#x0440;&#x043E;&#x0435; &#x043F;&#x0440;&#x043E;&#x0433;&#x0440;&#x0430;&#x043C;&#x043C;&#x0430; &#x043C;&#x043E;&#x0436;&#x0435;&#x0442; &#x043E;&#x0442;&#x0440;&#x0435;&#x0430;&#x0433;&#x0438;&#x0440;&#x043E;&#x0432;&#x0430;&#x0442;&#x044C; &#x043A;&#x043E;&#x0434;&#x043E;&#x043C;;</li><li id="Q_10_1"><button class="FuncButton" id="Q_10_1_Btn" onclick="CheckMCAnswer(10,1,this)">?</button>&#160;&#160;&#x0414;&#x0435;&#x0439;&#x0441;&#x0442;&#x0432;&#x0438;&#x0435; &#x043A;&#x043E;&#x0442;&#x043E;&#x0440;&#x043E;&#x0435; &#x043F;&#x043E; &#x0443;&#x043C;&#x043E;&#x043B;&#x0447;&#x0430;&#x043D;&#x0438;&#x044E; &#x043F;&#x0440;&#x043E;&#x0438;&#x0441;&#x0445;&#x043E;&#x0434;&#x0438;&#x0442; &#x043F;&#x0440;&#x0438; &#x043D;&#x0430;&#x0436;&#x0430;&#x0442;&#x0438;&#x0438;;</li><li id="Q_10_2"><button class="FuncButton" id="Q_10_2_Btn" onclick="CheckMCAnswer(10,2,this)">?</button>&#160;&#160;&#x042D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442; &#x0438;&#x043D;&#x0442;&#x0435;&#x0440;&#x0444;&#x0435;&#x0439;&#x0441;&#x0430; Windows Forms;</li><li id="Q_10_3"><button class="FuncButton" id="Q_10_3_Btn" onclick="CheckMCAnswer(10,3,this)">?</button>&#160;&#160;&#x042D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442; &#x043C;&#x043E;&#x0436;&#x043D;&#x043E; &#x0431;&#x0443;&#x0434;&#x0435;&#x0442; &#x0442;&#x0440;&#x0430;&#x043D;&#x0441;&#x0444;&#x043E;&#x0440;&#x043C;&#x0438;&#x0440;&#x043E;&#x0432;&#x0430;&#x0442;&#x044C;.</li></ol></li>
<li class="QuizQuestion" id="Q_11" style="display: none;"><div class="QuestionText">&#x041D;&#x0430; &#x0447;&#x0442;&#x043E; &#x0432;&#x043B;&#x0438;&#x044F;&#x0435;&#x0442; &#x0441;&#x0432;&#x043E;&#x0439;&#x0441;&#x0442;&#x0432;&#x043E; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430; TextAlign?</div><ol class="MCAnswers"><li id="Q_11_0"><button class="FuncButton" id="Q_11_0_Btn" onclick="CheckMCAnswer(11,0,this)">?</button>&#160;&#160;&#x0420;&#x0430;&#x0437;&#x043C;&#x0435;&#x0440; &#x0442;&#x0435;&#x043A;&#x0441;&#x0442;&#x0430;;</li><li id="Q_11_1"><button class="FuncButton" id="Q_11_1_Btn" onclick="CheckMCAnswer(11,1,this)">?</button>&#160;&#160;&#x0428;&#x0440;&#x0438;&#x0444;&#x0442; &#x0442;&#x0435;&#x043A;&#x0441;&#x0442;&#x0430;;</li><li id="Q_11_2"><button class="FuncButton" id="Q_11_2_Btn" onclick="CheckMCAnswer(11,2,this)">?</button>&#160;&#160;&#x0412;&#x044B;&#x0440;&#x0430;&#x0432;&#x043D;&#x0438;&#x0432;&#x0430;&#x043D;&#x0438;&#x0435; &#x0442;&#x0435;&#x043A;&#x0441;&#x0442;&#x0430;;</li><li id="Q_11_3"><button class="FuncButton" id="Q_11_3_Btn" onclick="CheckMCAnswer(11,3,this)">?</button>&#160;&#160;&#x0421;&#x043E;&#x0434;&#x0435;&#x0440;&#x0436;&#x0430;&#x043D;&#x0438;&#x0435; &#x0442;&#x0435;&#x043A;&#x0441;&#x0442;&#x0430;.</li></ol></li>
<li class="QuizQuestion" id="Q_12" style="display: none;"><div class="QuestionText">&#x041D;&#x0430; &#x0447;&#x0442;&#x043E; &#x0432;&#x043B;&#x0438;&#x044F;&#x0435;&#x0442; &#x0441;&#x0432;&#x043E;&#x0439;&#x0441;&#x0442;&#x0432;&#x043E; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430; Name?</div><ol class="MCAnswers"><li id="Q_12_0"><button class="FuncButton" id="Q_12_0_Btn" onclick="CheckMCAnswer(12,0,this)">?</button>&#160;&#160;&#x0422;&#x0435;&#x043A;&#x0441;&#x0442; &#x0432; &#x0437;&#x0430;&#x0433;&#x043B;&#x0430;&#x0432;&#x0438;&#x0438; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430;;</li><li id="Q_12_1"><button class="FuncButton" id="Q_12_1_Btn" onclick="CheckMCAnswer(12,1,this)">?</button>&#160;&#160;&#x0418;&#x043C;&#x044F; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430; &#x0432; &#x043A;&#x043E;&#x0434;&#x0435;;</li><li id="Q_12_2"><button class="FuncButton" id="Q_12_2_Btn" onclick="CheckMCAnswer(12,2,this)">?</button>&#160;&#160;&#x0421;&#x043E;&#x0434;&#x0435;&#x0440;&#x0436;&#x0430;&#x043D;&#x0438;&#x0435; &#x0442;&#x0435;&#x043A;&#x0441;&#x0442;&#x0430; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430;;</li><li id="Q_12_3"><button class="FuncButton" id="Q_12_3_Btn" onclick="CheckMCAnswer(12,3,this)">?</button>&#160;&#160;&#x0418;&#x043C;&#x044F; &#x0440;&#x0430;&#x0437;&#x0440;&#x0430;&#x0431;&#x043E;&#x0442;&#x0447;&#x0438;&#x043A;&#x0430; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430;.</li></ol></li>
<li class="QuizQuestion" id="Q_13" style="display: none;"><div class="QuestionText">&#x041D;&#x0430; &#x0447;&#x0442;&#x043E; &#x0432;&#x043B;&#x0438;&#x044F;&#x0435;&#x0442; &#x0441;&#x0432;&#x043E;&#x0439;&#x0441;&#x0442;&#x0432;&#x043E; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430; Text?</div><ol class="MCAnswers"><li id="Q_13_0"><button class="FuncButton" id="Q_13_0_Btn" onclick="CheckMCAnswer(13,0,this)">?</button>&#160;&#160;&#x0422;&#x0435;&#x043A;&#x0441;&#x0442; &#x0432; &#x0437;&#x0430;&#x0433;&#x043B;&#x0430;&#x0432;&#x0438;&#x0438; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430;;</li><li id="Q_13_1"><button class="FuncButton" id="Q_13_1_Btn" onclick="CheckMCAnswer(13,1,this)">?</button>&#160;&#160;&#x0418;&#x043C;&#x044F; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430; &#x0432; &#x043A;&#x043E;&#x0434;&#x0435;;</li><li id="Q_13_2"><button class="FuncButton" id="Q_13_2_Btn" onclick="CheckMCAnswer(13,2,this)">?</button>&#160;&#160;&#x0421;&#x043E;&#x0434;&#x0435;&#x0440;&#x0436;&#x0430;&#x043D;&#x0438;&#x0435; &#x0442;&#x0435;&#x043A;&#x0441;&#x0442;&#x0430; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430;;</li><li id="Q_13_3"><button class="FuncButton" id="Q_13_3_Btn" onclick="CheckMCAnswer(13,3,this)">?</button>&#160;&#160;&#x0418;&#x043C;&#x044F; &#x0440;&#x0430;&#x0437;&#x0440;&#x0430;&#x0431;&#x043E;&#x0442;&#x0447;&#x0438;&#x043A;&#x0430; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430;.</li></ol></li>
<li class="QuizQuestion" id="Q_14" style="display: none;"><div class="QuestionText">&#x041D;&#x0430; &#x0447;&#x0442;&#x043E; &#x0432;&#x043B;&#x0438;&#x044F;&#x0435;&#x0442; &#x0441;&#x0432;&#x043E;&#x0439;&#x0441;&#x0442;&#x0432;&#x043E; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430; Cursor?</div><ol class="MCAnswers"><li id="Q_14_0"><button class="FuncButton" id="Q_14_0_Btn" onclick="CheckMCAnswer(14,0,this)">?</button>&#160;&#160;&#x0426;&#x0432;&#x0435;&#x0442; &#x043A;&#x0443;&#x0440;&#x0441;&#x043E;&#x0440;&#x0430;;</li><li id="Q_14_1"><button class="FuncButton" id="Q_14_1_Btn" onclick="CheckMCAnswer(14,1,this)">?</button>&#160;&#160;&#x0420;&#x0430;&#x0437;&#x043C;&#x0435;&#x0440; &#x043A;&#x0443;&#x0440;&#x0441;&#x043E;&#x0440;&#x0430; &#x043F;&#x0440;&#x0438; &#x043D;&#x0430;&#x0432;&#x0435;&#x0434;&#x0435;&#x043D;&#x0438;&#x0438;;</li><li id="Q_14_2"><button class="FuncButton" id="Q_14_2_Btn" onclick="CheckMCAnswer(14,2,this)">?</button>&#160;&#160;&#x0422;&#x0438;&#x043F; &#x043A;&#x0443;&#x0440;&#x0441;&#x043E;&#x0440;&#x0430; &#x043F;&#x0440;&#x0438; &#x043D;&#x0430;&#x0432;&#x0435;&#x0434;&#x0435;&#x043D;&#x0438;&#x0438;;</li><li id="Q_14_3"><button class="FuncButton" id="Q_14_3_Btn" onclick="CheckMCAnswer(14,3,this)">?</button>&#160;&#160;&#x0422;&#x0438;&#x043F; &#x043A;&#x0443;&#x0440;&#x0441;&#x043E;&#x0440;&#x0430; &#x043F;&#x0440;&#x0438; &#x043D;&#x0430;&#x0436;&#x0430;&#x0442;&#x0438;&#x0438;.</li></ol></li>
<li class="QuizQuestion" id="Q_15" style="display: none;"><div class="QuestionText">&#x0414;&#x043B;&#x044F; &#x0447;&#x0435;&#x0433;&#x043E; &#x0432; &#x0441;&#x0432;&#x043E;&#x0439;&#x0441;&#x0442;&#x0432;&#x0430;&#x0445; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430; &#x043D;&#x0443;&#x0436;&#x0435;&#x043D; &#x0440;&#x0430;&#x0437;&#x0434;&#x0435;&#x043B; &#x0421;&#x043F;&#x0435;&#x0446;&#x0438;&#x0430;&#x043B;&#x044C;&#x043D;&#x044B;&#x0445; &#x0412;&#x043E;&#x0437;&#x043C;&#x043E;&#x0436;&#x043D;&#x043E;&#x0441;&#x0442;&#x0435;&#x0439;?</div><ol class="MCAnswers"><li id="Q_15_0"><button class="FuncButton" id="Q_15_0_Btn" onclick="CheckMCAnswer(15,0,this)">?</button>&#160;&#160;&#x0414;&#x043B;&#x044F; &#x043D;&#x0430;&#x0438;&#x043C;&#x0435;&#x043D;&#x043E;&#x0432;&#x0430;&#x043D;&#x0438;&#x044F; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x043E;&#x0432; &#x0432;&#x043D;&#x0443;&#x0442;&#x0440;&#x0438; &#x0441;&#x0440;&#x0435;&#x0434;&#x044B; &#x0440;&#x0430;&#x0437;&#x0440;&#x0430;&#x0431;&#x043E;&#x0442;&#x043A;&#x0438;;</li><li id="Q_15_1"><button class="FuncButton" id="Q_15_1_Btn" onclick="CheckMCAnswer(15,1,this)">?</button>&#160;&#160;&#x0414;&#x043B;&#x044F; &#x043D;&#x0430;&#x0441;&#x0442;&#x0440;&#x043E;&#x0435;&#x043A; &#x043F;&#x0440;&#x043E;&#x0433;&#x0440;&#x0430;&#x043C; &#x043F;&#x043E;&#x043C;&#x043E;&#x0449;&#x0438; &#x0441;&#x043B;&#x0435;&#x043F;&#x044B;&#x043C;;</li><li id="Q_15_2"><button class="FuncButton" id="Q_15_2_Btn" onclick="CheckMCAnswer(15,2,this)">?</button>&#160;&#160;&#x0414;&#x043B;&#x044F; &#x043F;&#x0440;&#x043E;&#x0434;&#x0432;&#x0438;&#x043D;&#x0443;&#x0442;&#x044B;&#x0445; &#x043D;&#x0430;&#x0441;&#x0442;&#x0440;&#x043E;&#x0435;&#x043A; &#x0432;&#x043D;&#x0435;&#x0448;&#x043D;&#x0435;&#x0433;&#x043E; &#x0432;&#x0438;&#x0434;&#x0430;;</li><li id="Q_15_3"><button class="FuncButton" id="Q_15_3_Btn" onclick="CheckMCAnswer(15,3,this)">?</button>&#160;&#160;&#x0414;&#x043B;&#x044F; &#x0444;&#x0443;&#x043D;&#x043A;&#x0446;&#x0438;&#x0439; &#x0432; &#x0440;&#x0435;&#x0436;&#x0438;&#x043C;&#x0435; &#x0430;&#x0434;&#x043C;&#x0438;&#x043D;&#x0438;&#x0441;&#x0442;&#x0440;&#x0430;&#x0442;&#x043E;&#x0440;&#x0430;.</li></ol></li>
<li class="QuizQuestion" id="Q_16" style="display: none;"><div class="QuestionText">&#x0430;&#x043A; &#x0438;&#x0437;&#x043C;&#x0435;&#x043D;&#x0438;&#x0442;&#x044C; &#x043F;&#x043E;&#x043B;&#x043E;&#x0436;&#x0435;&#x043D;&#x0438;&#x0435; &#x044D;&#x043B;&#x0435;&#x043C;&#x0435;&#x043D;&#x0442;&#x0430; &#x0447;&#x0435;&#x0440;&#x0435;&#x0437; &#x043A;&#x043E;&#x0434;?</div><ol class="MCAnswers"><li id="Q_16_0"><button class="FuncButton" id="Q_16_0_Btn" onclick="CheckMCAnswer(16,0,this)">?</button>&#160;&#160;name.position = new Vector2(x,y);</li><li id="Q_16_1"><button class="FuncButton" id="Q_16_1_Btn" onclick="CheckMCAnswer(16,1,this)">?</button>&#160;&#160;name.location.x = x; name.location.y =y;</li><li id="Q_16_2"><button class="FuncButton" id="Q_16_2_Btn" onclick="CheckMCAnswer(16,2,this)">?</button>&#160;&#160;name.x = x; name.y = y;</li><li id="Q_16_3"><button class="FuncButton" id="Q_16_3_Btn" onclick="CheckMCAnswer(16,3,this)">?</button>&#160;&#160;name.location(x,y);</li></ol></li>
<li class="QuizQuestion" id="Q_17" style="display: none;"><div class="QuestionText">&#x041A;&#x0430;&#x043A;&#x043E;&#x0439; &#x043C;&#x0435;&#x0442;&#x043E;&#x0434; &#x0438;&#x0441;&#x043F;&#x043E;&#x043B;&#x044C;&#x0437;&#x0443;&#x0435;&#x0442;&#x0441;&#x044F; &#x0447;&#x0442;&#x043E;&#x0431;&#x044B; &#x0434;&#x043E;&#x0431;&#x0430;&#x0432;&#x0438;&#x0442;&#x044C; &#x0440;&#x0435;&#x0441;&#x0443;&#x0440;&#x0441; &#x0432;&#x043E; &#x0432;&#x0440;&#x0435;&#x043C;&#x044F; &#x0440;&#x0430;&#x0431;&#x043E;&#x0442;&#x044B; &#x043F;&#x0440;&#x043E;&#x0433;&#x0440;&#x0430;&#x043C;&#x043C;&#x044B;?</div><ol class="MCAnswers"><li id="Q_17_0"><button class="FuncButton" id="Q_17_0_Btn" onclick="CheckMCAnswer(17,0,this)">?</button>&#160;&#160;Import;</li><li id="Q_17_1"><button class="FuncButton" id="Q_17_1_Btn" onclick="CheckMCAnswer(17,1,this)">?</button>&#160;&#160;OpenLocalFile;</li><li id="Q_17_2"><button class="FuncButton" id="Q_17_2_Btn" onclick="CheckMCAnswer(17,2,this)">?</button>&#160;&#160;GetLocalResourceObject;</li><li id="Q_17_3"><button class="FuncButton" id="Q_17_3_Btn" onclick="CheckMCAnswer(17,3,this)">?</button>&#160;&#160;LoadFile;</li></ol></li>
<li class="QuizQuestion" id="Q_18" style="display: none;"><div class="QuestionText">&#x0415;&#x0441;&#x043B;&#x0438; &#x0443; &#x0432;&#x0430;&#x0441; &#x0435;&#x0441;&#x0442;&#x044C; textbox1 &#x0438; textbox2, &#x043D;&#x0430;&#x043F;&#x0438;&#x0448;&#x0438;&#x0442;&#x0435; &#x043E;&#x0434;&#x043D;&#x043E;&#x0439; &#x0441;&#x0442;&#x0440;&#x043E;&#x0447;&#x043A;&#x043E;&#x0439; &#x043A;&#x043E;&#x0434; &#x043A;&#x043E;&#x0442;&#x043E;&#x0440;&#x044B;&#x0439; &#x043F;&#x0440;&#x0438; &#x0438;&#x0441;&#x043F;&#x043E;&#x043B;&#x043D;&#x0435;&#x043D;&#x0438;&#x0438; &#x043F;&#x0440;&#x0438;&#x0441;&#x0432;&#x0430;&#x0438;&#x0432;&#x0430;&#x0435;&#x0442; &#x0442;&#x0435;&#x043A;&#x0441;&#x0442; textbox1 &#x0432; textbox2, &#x043F;&#x0440;&#x0438; &#x044D;&#x0442;&#x043E;&#x043C; &#x0443;&#x0434;&#x043E;&#x0441;&#x0442;&#x043E;&#x0432;&#x0435;&#x0440;&#x0438;&#x0432;&#x0448;&#x0438;&#x0441;&#x044C; &#x0447;&#x0442;&#x043E; &#x0432;&#x0441;&#x0435; &#x0431;&#x0443;&#x043A;&#x0432;&#x044B; &#x0432; &#x0442;&#x0435;&#x043A;&#x0441;&#x0442;&#x0435; &#x0431;&#x043E;&#x043B;&#x044C;&#x0448;&#x0438;&#x0435;.</div><div class="ShortAnswer" id="Q_18_SA"><form method="post" autocomplete="off" onsubmit="return false;"><div><textarea autocomplete="off" id="Q_18_Guess" onfocus="TrackFocus('Q_18_Guess')" onblur="LeaveGap()" class="ShortAnswerBox" cols="29" rows="2"></textarea><br /><br /><button class="FuncButton" onclick="CheckShortAnswer(18)">&#x041F;&#x0440;&#x043E;&#x0432;&#x0435;&#x0440;&#x044C;!</button><button class="FuncButton" onclick="ShowHint(18)">&#x041F;&#x043E;&#x0434;&#x0441;&#x043A;&#x0430;&#x0437;&#x043A;&#x0430;</button><button class="FuncButton" onclick="ShowAnswers(18)">&#x041F;&#x043E;&#x043A;&#x0430;&#x0436;&#x0438; &#x043E;&#x0442;&#x0432;&#x0435;&#x0442;</button></div></form></div></li></ol>



</div>

</div>

<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onclick="HideFeedback(); return false;">&#160;OK&#160;</button>
</div>

<!-- BeginBottomNavButtons -->


<div class="NavButtonBar" id="BottomNavBar">


<button class="NavButton" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onclick="location='contents.htm'; return false;"> &#x0441;&#x043E;&#x0434;&#x0435;&#x0440;&#x0436;&#x0430;&#x043D;&#x0438;&#x0435; </button>



<button class="NavButton" onclick="location='jcross1.htm'; return false;">=&gt;</button>


</div>



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>

</html>
